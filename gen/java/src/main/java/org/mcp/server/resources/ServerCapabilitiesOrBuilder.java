// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: mcp/server/v1/capabilities.proto
// Protobuf Java Version: 4.29.3

package org.mcp.server.resources;

public interface ServerCapabilitiesOrBuilder extends
    // @@protoc_insertion_point(interface_extends:mcp.server.v1.ServerCapabilities)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Present if the server supports argument autocompletion suggestions.
   * </pre>
   *
   * <code>.google.protobuf.Struct completions = 1 [json_name = "completions"];</code>
   * @return Whether the completions field is set.
   */
  boolean hasCompletions();
  /**
   * <pre>
   * Present if the server supports argument autocompletion suggestions.
   * </pre>
   *
   * <code>.google.protobuf.Struct completions = 1 [json_name = "completions"];</code>
   * @return The completions.
   */
  com.google.protobuf.Struct getCompletions();
  /**
   * <pre>
   * Present if the server supports argument autocompletion suggestions.
   * </pre>
   *
   * <code>.google.protobuf.Struct completions = 1 [json_name = "completions"];</code>
   */
  com.google.protobuf.StructOrBuilder getCompletionsOrBuilder();

  /**
   * <pre>
   * Experimental, non-standard capabilities that the server supports.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Struct&gt; experimental = 2 [json_name = "experimental"];</code>
   */
  int getExperimentalCount();
  /**
   * <pre>
   * Experimental, non-standard capabilities that the server supports.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Struct&gt; experimental = 2 [json_name = "experimental"];</code>
   */
  boolean containsExperimental(
      java.lang.String key);
  /**
   * Use {@link #getExperimentalMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.google.protobuf.Struct>
  getExperimental();
  /**
   * <pre>
   * Experimental, non-standard capabilities that the server supports.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Struct&gt; experimental = 2 [json_name = "experimental"];</code>
   */
  java.util.Map<java.lang.String, com.google.protobuf.Struct>
  getExperimentalMap();
  /**
   * <pre>
   * Experimental, non-standard capabilities that the server supports.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Struct&gt; experimental = 2 [json_name = "experimental"];</code>
   */
  /* nullable */
com.google.protobuf.Struct getExperimentalOrDefault(
      java.lang.String key,
      /* nullable */
com.google.protobuf.Struct defaultValue);
  /**
   * <pre>
   * Experimental, non-standard capabilities that the server supports.
   * </pre>
   *
   * <code>map&lt;string, .google.protobuf.Struct&gt; experimental = 2 [json_name = "experimental"];</code>
   */
  com.google.protobuf.Struct getExperimentalOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Present if the server supports sending log messages to the client.
   * </pre>
   *
   * <code>.google.protobuf.Struct logging = 3 [json_name = "logging"];</code>
   * @return Whether the logging field is set.
   */
  boolean hasLogging();
  /**
   * <pre>
   * Present if the server supports sending log messages to the client.
   * </pre>
   *
   * <code>.google.protobuf.Struct logging = 3 [json_name = "logging"];</code>
   * @return The logging.
   */
  com.google.protobuf.Struct getLogging();
  /**
   * <pre>
   * Present if the server supports sending log messages to the client.
   * </pre>
   *
   * <code>.google.protobuf.Struct logging = 3 [json_name = "logging"];</code>
   */
  com.google.protobuf.StructOrBuilder getLoggingOrBuilder();

  /**
   * <pre>
   * Present if the server offers any prompt templates.
   * </pre>
   *
   * <code>.mcp.server.v1.ServerCapabilities.Prompts prompts = 4 [json_name = "prompts"];</code>
   * @return Whether the prompts field is set.
   */
  boolean hasPrompts();
  /**
   * <pre>
   * Present if the server offers any prompt templates.
   * </pre>
   *
   * <code>.mcp.server.v1.ServerCapabilities.Prompts prompts = 4 [json_name = "prompts"];</code>
   * @return The prompts.
   */
  org.mcp.server.resources.ServerCapabilities.Prompts getPrompts();
  /**
   * <pre>
   * Present if the server offers any prompt templates.
   * </pre>
   *
   * <code>.mcp.server.v1.ServerCapabilities.Prompts prompts = 4 [json_name = "prompts"];</code>
   */
  org.mcp.server.resources.ServerCapabilities.PromptsOrBuilder getPromptsOrBuilder();

  /**
   * <pre>
   * Present if the server offers any resources to read.
   * </pre>
   *
   * <code>.mcp.server.v1.ServerCapabilities.Resources resources = 5 [json_name = "resources"];</code>
   * @return Whether the resources field is set.
   */
  boolean hasResources();
  /**
   * <pre>
   * Present if the server offers any resources to read.
   * </pre>
   *
   * <code>.mcp.server.v1.ServerCapabilities.Resources resources = 5 [json_name = "resources"];</code>
   * @return The resources.
   */
  org.mcp.server.resources.ServerCapabilities.Resources getResources();
  /**
   * <pre>
   * Present if the server offers any resources to read.
   * </pre>
   *
   * <code>.mcp.server.v1.ServerCapabilities.Resources resources = 5 [json_name = "resources"];</code>
   */
  org.mcp.server.resources.ServerCapabilities.ResourcesOrBuilder getResourcesOrBuilder();

  /**
   * <pre>
   * Present if the server offers any tools to call.
   * </pre>
   *
   * <code>.mcp.server.v1.ServerCapabilities.Tools tools = 6 [json_name = "tools"];</code>
   * @return Whether the tools field is set.
   */
  boolean hasTools();
  /**
   * <pre>
   * Present if the server offers any tools to call.
   * </pre>
   *
   * <code>.mcp.server.v1.ServerCapabilities.Tools tools = 6 [json_name = "tools"];</code>
   * @return The tools.
   */
  org.mcp.server.resources.ServerCapabilities.Tools getTools();
  /**
   * <pre>
   * Present if the server offers any tools to call.
   * </pre>
   *
   * <code>.mcp.server.v1.ServerCapabilities.Tools tools = 6 [json_name = "tools"];</code>
   */
  org.mcp.server.resources.ServerCapabilities.ToolsOrBuilder getToolsOrBuilder();
}
