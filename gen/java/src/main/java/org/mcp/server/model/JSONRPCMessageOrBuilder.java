// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: mcp/server/v1/json_rpc.proto
// Protobuf Java Version: 4.29.3

package org.mcp.server.model;

public interface JSONRPCMessageOrBuilder extends
    // @@protoc_insertion_point(interface_extends:mcp.server.v1.JSONRPCMessage)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * JSON-RPC request.
   * </pre>
   *
   * <code>.mcp.server.v1.JSONRPCRequest request = 1 [json_name = "request"];</code>
   * @return Whether the request field is set.
   */
  boolean hasRequest();
  /**
   * <pre>
   * JSON-RPC request.
   * </pre>
   *
   * <code>.mcp.server.v1.JSONRPCRequest request = 1 [json_name = "request"];</code>
   * @return The request.
   */
  org.mcp.server.model.JSONRPCRequest getRequest();
  /**
   * <pre>
   * JSON-RPC request.
   * </pre>
   *
   * <code>.mcp.server.v1.JSONRPCRequest request = 1 [json_name = "request"];</code>
   */
  org.mcp.server.model.JSONRPCRequestOrBuilder getRequestOrBuilder();

  /**
   * <pre>
   * JSON-RPC notification.
   * </pre>
   *
   * <code>.mcp.server.v1.JSONRPCNotification notification = 2 [json_name = "notification"];</code>
   * @return Whether the notification field is set.
   */
  boolean hasNotification();
  /**
   * <pre>
   * JSON-RPC notification.
   * </pre>
   *
   * <code>.mcp.server.v1.JSONRPCNotification notification = 2 [json_name = "notification"];</code>
   * @return The notification.
   */
  org.mcp.server.model.JSONRPCNotification getNotification();
  /**
   * <pre>
   * JSON-RPC notification.
   * </pre>
   *
   * <code>.mcp.server.v1.JSONRPCNotification notification = 2 [json_name = "notification"];</code>
   */
  org.mcp.server.model.JSONRPCNotificationOrBuilder getNotificationOrBuilder();

  /**
   * <pre>
   * JSON-RPC response.
   * </pre>
   *
   * <code>.mcp.server.v1.JSONRPCResponse response = 3 [json_name = "response"];</code>
   * @return Whether the response field is set.
   */
  boolean hasResponse();
  /**
   * <pre>
   * JSON-RPC response.
   * </pre>
   *
   * <code>.mcp.server.v1.JSONRPCResponse response = 3 [json_name = "response"];</code>
   * @return The response.
   */
  org.mcp.server.model.JSONRPCResponse getResponse();
  /**
   * <pre>
   * JSON-RPC response.
   * </pre>
   *
   * <code>.mcp.server.v1.JSONRPCResponse response = 3 [json_name = "response"];</code>
   */
  org.mcp.server.model.JSONRPCResponseOrBuilder getResponseOrBuilder();

  /**
   * <pre>
   * JSON-RPC error.
   * </pre>
   *
   * <code>.mcp.server.v1.JSONRPCError error = 4 [json_name = "error"];</code>
   * @return Whether the error field is set.
   */
  boolean hasError();
  /**
   * <pre>
   * JSON-RPC error.
   * </pre>
   *
   * <code>.mcp.server.v1.JSONRPCError error = 4 [json_name = "error"];</code>
   * @return The error.
   */
  org.mcp.server.model.JSONRPCError getError();
  /**
   * <pre>
   * JSON-RPC error.
   * </pre>
   *
   * <code>.mcp.server.v1.JSONRPCError error = 4 [json_name = "error"];</code>
   */
  org.mcp.server.model.JSONRPCErrorOrBuilder getErrorOrBuilder();

  org.mcp.server.model.JSONRPCMessage.MsgCase getMsgCase();
}
