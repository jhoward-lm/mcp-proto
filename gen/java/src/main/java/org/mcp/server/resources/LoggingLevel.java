// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: mcp/server/v1/common.proto
// Protobuf Java Version: 4.29.3

package org.mcp.server.resources;

/**
 * <pre>
 * The severity of a log message.
 * </pre>
 *
 * Protobuf enum {@code mcp.server.v1.LoggingLevel}
 */
public enum LoggingLevel
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Unspecified severity.
   * </pre>
   *
   * <code>LOGGING_LEVEL_UNSPECIFIED = 0;</code>
   */
  LOGGING_LEVEL_UNSPECIFIED(0),
  /**
   * <pre>
   * A panic condition.
   * </pre>
   *
   * <code>LOGGING_LEVEL_ALERT = 1 [(.mcp.server.v1.string_name) = "alert"];</code>
   */
  LOGGING_LEVEL_ALERT(1),
  /**
   * <pre>
   * A critical condition.
   * </pre>
   *
   * <code>LOGGING_LEVEL_CRITICAL = 2 [(.mcp.server.v1.string_name) = "critical"];</code>
   */
  LOGGING_LEVEL_CRITICAL(2),
  /**
   * <pre>
   * A debug message.
   * </pre>
   *
   * <code>LOGGING_LEVEL_DEBUG = 3 [(.mcp.server.v1.string_name) = "debug"];</code>
   */
  LOGGING_LEVEL_DEBUG(3),
  /**
   * <pre>
   * Normal but significant condition.
   * </pre>
   *
   * <code>LOGGING_LEVEL_NOTICE = 4 [(.mcp.server.v1.string_name) = "notice"];</code>
   */
  LOGGING_LEVEL_NOTICE(4),
  /**
   * <pre>
   * A procedural entry.
   * </pre>
   *
   * <code>LOGGING_LEVEL_INFO = 5 [(.mcp.server.v1.string_name) = "info"];</code>
   */
  LOGGING_LEVEL_INFO(5),
  /**
   * <pre>
   * A warning condition.
   * </pre>
   *
   * <code>LOGGING_LEVEL_WARNING = 6 [(.mcp.server.v1.string_name) = "warning"];</code>
   */
  LOGGING_LEVEL_WARNING(6),
  /**
   * <pre>
   * A non-critical error.
   * </pre>
   *
   * <code>LOGGING_LEVEL_ERROR = 7 [(.mcp.server.v1.string_name) = "error"];</code>
   */
  LOGGING_LEVEL_ERROR(7),
  /**
   * <pre>
   * A severe error.
   * </pre>
   *
   * <code>LOGGING_LEVEL_EMERGENCY = 8 [(.mcp.server.v1.string_name) = "emergency"];</code>
   */
  LOGGING_LEVEL_EMERGENCY(8),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      LoggingLevel.class.getName());
  }
  /**
   * <pre>
   * Unspecified severity.
   * </pre>
   *
   * <code>LOGGING_LEVEL_UNSPECIFIED = 0;</code>
   */
  public static final int LOGGING_LEVEL_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * A panic condition.
   * </pre>
   *
   * <code>LOGGING_LEVEL_ALERT = 1 [(.mcp.server.v1.string_name) = "alert"];</code>
   */
  public static final int LOGGING_LEVEL_ALERT_VALUE = 1;
  /**
   * <pre>
   * A critical condition.
   * </pre>
   *
   * <code>LOGGING_LEVEL_CRITICAL = 2 [(.mcp.server.v1.string_name) = "critical"];</code>
   */
  public static final int LOGGING_LEVEL_CRITICAL_VALUE = 2;
  /**
   * <pre>
   * A debug message.
   * </pre>
   *
   * <code>LOGGING_LEVEL_DEBUG = 3 [(.mcp.server.v1.string_name) = "debug"];</code>
   */
  public static final int LOGGING_LEVEL_DEBUG_VALUE = 3;
  /**
   * <pre>
   * Normal but significant condition.
   * </pre>
   *
   * <code>LOGGING_LEVEL_NOTICE = 4 [(.mcp.server.v1.string_name) = "notice"];</code>
   */
  public static final int LOGGING_LEVEL_NOTICE_VALUE = 4;
  /**
   * <pre>
   * A procedural entry.
   * </pre>
   *
   * <code>LOGGING_LEVEL_INFO = 5 [(.mcp.server.v1.string_name) = "info"];</code>
   */
  public static final int LOGGING_LEVEL_INFO_VALUE = 5;
  /**
   * <pre>
   * A warning condition.
   * </pre>
   *
   * <code>LOGGING_LEVEL_WARNING = 6 [(.mcp.server.v1.string_name) = "warning"];</code>
   */
  public static final int LOGGING_LEVEL_WARNING_VALUE = 6;
  /**
   * <pre>
   * A non-critical error.
   * </pre>
   *
   * <code>LOGGING_LEVEL_ERROR = 7 [(.mcp.server.v1.string_name) = "error"];</code>
   */
  public static final int LOGGING_LEVEL_ERROR_VALUE = 7;
  /**
   * <pre>
   * A severe error.
   * </pre>
   *
   * <code>LOGGING_LEVEL_EMERGENCY = 8 [(.mcp.server.v1.string_name) = "emergency"];</code>
   */
  public static final int LOGGING_LEVEL_EMERGENCY_VALUE = 8;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static LoggingLevel valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static LoggingLevel forNumber(int value) {
    switch (value) {
      case 0: return LOGGING_LEVEL_UNSPECIFIED;
      case 1: return LOGGING_LEVEL_ALERT;
      case 2: return LOGGING_LEVEL_CRITICAL;
      case 3: return LOGGING_LEVEL_DEBUG;
      case 4: return LOGGING_LEVEL_NOTICE;
      case 5: return LOGGING_LEVEL_INFO;
      case 6: return LOGGING_LEVEL_WARNING;
      case 7: return LOGGING_LEVEL_ERROR;
      case 8: return LOGGING_LEVEL_EMERGENCY;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<LoggingLevel>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      LoggingLevel> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<LoggingLevel>() {
          public LoggingLevel findValueByNumber(int number) {
            return LoggingLevel.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return org.mcp.server.resources.CommonProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final LoggingLevel[] VALUES = values();

  public static LoggingLevel valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private LoggingLevel(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:mcp.server.v1.LoggingLevel)
}

