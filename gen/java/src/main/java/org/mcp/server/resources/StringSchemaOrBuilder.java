// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: mcp/server/v1/requests.proto
// Protobuf Java Version: 4.29.3

package org.mcp.server.resources;

public interface StringSchemaOrBuilder extends
    // @@protoc_insertion_point(interface_extends:mcp.server.v1.StringSchema)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The JSON Schema type, always "string".
   * </pre>
   *
   * <code>string type = 1 [json_name = "type"];</code>
   * @return Whether the type field is set.
   */
  boolean hasType();
  /**
   * <pre>
   * The JSON Schema type, always "string".
   * </pre>
   *
   * <code>string type = 1 [json_name = "type"];</code>
   * @return The type.
   */
  java.lang.String getType();
  /**
   * <pre>
   * The JSON Schema type, always "string".
   * </pre>
   *
   * <code>string type = 1 [json_name = "type"];</code>
   * @return The bytes for type.
   */
  com.google.protobuf.ByteString
      getTypeBytes();

  /**
   * <pre>
   * A human-readable title for the schema.
   * </pre>
   *
   * <code>string title = 2 [json_name = "title"];</code>
   * @return Whether the title field is set.
   */
  boolean hasTitle();
  /**
   * <pre>
   * A human-readable title for the schema.
   * </pre>
   *
   * <code>string title = 2 [json_name = "title"];</code>
   * @return The title.
   */
  java.lang.String getTitle();
  /**
   * <pre>
   * A human-readable title for the schema.
   * </pre>
   *
   * <code>string title = 2 [json_name = "title"];</code>
   * @return The bytes for title.
   */
  com.google.protobuf.ByteString
      getTitleBytes();

  /**
   * <pre>
   * A description of the schema.
   * </pre>
   *
   * <code>string description = 3 [json_name = "description"];</code>
   * @return Whether the description field is set.
   */
  boolean hasDescription();
  /**
   * <pre>
   * A description of the schema.
   * </pre>
   *
   * <code>string description = 3 [json_name = "description"];</code>
   * @return The description.
   */
  java.lang.String getDescription();
  /**
   * <pre>
   * A description of the schema.
   * </pre>
   *
   * <code>string description = 3 [json_name = "description"];</code>
   * @return The bytes for description.
   */
  com.google.protobuf.ByteString
      getDescriptionBytes();

  /**
   * <pre>
   * The minimum length of the string.
   * </pre>
   *
   * <code>int32 min_length = 4 [json_name = "minLength"];</code>
   * @return Whether the minLength field is set.
   */
  boolean hasMinLength();
  /**
   * <pre>
   * The minimum length of the string.
   * </pre>
   *
   * <code>int32 min_length = 4 [json_name = "minLength"];</code>
   * @return The minLength.
   */
  int getMinLength();

  /**
   * <pre>
   * The maximum length of the string.
   * </pre>
   *
   * <code>int32 max_length = 5 [json_name = "maxLength"];</code>
   * @return Whether the maxLength field is set.
   */
  boolean hasMaxLength();
  /**
   * <pre>
   * The maximum length of the string.
   * </pre>
   *
   * <code>int32 max_length = 5 [json_name = "maxLength"];</code>
   * @return The maxLength.
   */
  int getMaxLength();

  /**
   * <pre>
   * The format of the string (e.g., email, uri, date, date-time).
   * </pre>
   *
   * <code>string format = 6 [json_name = "format"];</code>
   * @return Whether the format field is set.
   */
  boolean hasFormat();
  /**
   * <pre>
   * The format of the string (e.g., email, uri, date, date-time).
   * </pre>
   *
   * <code>string format = 6 [json_name = "format"];</code>
   * @return The format.
   */
  java.lang.String getFormat();
  /**
   * <pre>
   * The format of the string (e.g., email, uri, date, date-time).
   * </pre>
   *
   * <code>string format = 6 [json_name = "format"];</code>
   * @return The bytes for format.
   */
  com.google.protobuf.ByteString
      getFormatBytes();
}
