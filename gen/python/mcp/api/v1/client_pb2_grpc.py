# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from mcp.api.v1 import client_pb2 as mcp_dot_api_dot_v1_dot_client__pb2


class ClientNotificationServiceStub(object):
    """Service describing notifications sent by the client.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Cancelled = channel.unary_unary(
                '/mcp.api.v1.ClientNotificationService/Cancelled',
                request_serializer=mcp_dot_api_dot_v1_dot_client__pb2.CancelledNotification.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_client__pb2.Empty.FromString,
                )
        self.Initialized = channel.unary_unary(
                '/mcp.api.v1.ClientNotificationService/Initialized',
                request_serializer=mcp_dot_api_dot_v1_dot_client__pb2.InitializedNotification.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_client__pb2.Empty.FromString,
                )
        self.Progress = channel.unary_unary(
                '/mcp.api.v1.ClientNotificationService/Progress',
                request_serializer=mcp_dot_api_dot_v1_dot_client__pb2.ProgressNotification.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_client__pb2.Empty.FromString,
                )
        self.RootsListChanged = channel.unary_unary(
                '/mcp.api.v1.ClientNotificationService/RootsListChanged',
                request_serializer=mcp_dot_api_dot_v1_dot_client__pb2.RootsListChangedNotification.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_client__pb2.Empty.FromString,
                )


class ClientNotificationServiceServicer(object):
    """Service describing notifications sent by the client.
    """

    def Cancelled(self, request, context):
        """Notify that a previously-issued request is being cancelled.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Initialized(self, request, context):
        """Notify the server that initialization has finished.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Progress(self, request, context):
        """Send a progress notification.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RootsListChanged(self, request, context):
        """Notify that the list of roots has changed.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClientNotificationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Cancelled': grpc.unary_unary_rpc_method_handler(
                    servicer.Cancelled,
                    request_deserializer=mcp_dot_api_dot_v1_dot_client__pb2.CancelledNotification.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_client__pb2.Empty.SerializeToString,
            ),
            'Initialized': grpc.unary_unary_rpc_method_handler(
                    servicer.Initialized,
                    request_deserializer=mcp_dot_api_dot_v1_dot_client__pb2.InitializedNotification.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_client__pb2.Empty.SerializeToString,
            ),
            'Progress': grpc.unary_unary_rpc_method_handler(
                    servicer.Progress,
                    request_deserializer=mcp_dot_api_dot_v1_dot_client__pb2.ProgressNotification.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_client__pb2.Empty.SerializeToString,
            ),
            'RootsListChanged': grpc.unary_unary_rpc_method_handler(
                    servicer.RootsListChanged,
                    request_deserializer=mcp_dot_api_dot_v1_dot_client__pb2.RootsListChangedNotification.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_client__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mcp.api.v1.ClientNotificationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ClientNotificationService(object):
    """Service describing notifications sent by the client.
    """

    @staticmethod
    def Cancelled(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ClientNotificationService/Cancelled',
            mcp_dot_api_dot_v1_dot_client__pb2.CancelledNotification.SerializeToString,
            mcp_dot_api_dot_v1_dot_client__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Initialized(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ClientNotificationService/Initialized',
            mcp_dot_api_dot_v1_dot_client__pb2.InitializedNotification.SerializeToString,
            mcp_dot_api_dot_v1_dot_client__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Progress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ClientNotificationService/Progress',
            mcp_dot_api_dot_v1_dot_client__pb2.ProgressNotification.SerializeToString,
            mcp_dot_api_dot_v1_dot_client__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RootsListChanged(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ClientNotificationService/RootsListChanged',
            mcp_dot_api_dot_v1_dot_client__pb2.RootsListChangedNotification.SerializeToString,
            mcp_dot_api_dot_v1_dot_client__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

class ClientServiceStub(object):
    """Service describing available methods exposed by an MCP client.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateElicitation = channel.unary_unary(
                '/mcp.api.v1.ClientService/CreateElicitation',
                request_serializer=mcp_dot_api_dot_v1_dot_client__pb2.ElicitRequest.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_client__pb2.ElicitResult.FromString,
                )
        self.CreateMessage = channel.unary_unary(
                '/mcp.api.v1.ClientService/CreateMessage',
                request_serializer=mcp_dot_api_dot_v1_dot_client__pb2.CreateMessageRequest.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_client__pb2.CreateMessageResult.FromString,
                )
        self.ListRoots = channel.unary_unary(
                '/mcp.api.v1.ClientService/ListRoots',
                request_serializer=mcp_dot_api_dot_v1_dot_client__pb2.ListRootsRequest.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_client__pb2.ListRootsResult.FromString,
                )
        self.Ping = channel.unary_unary(
                '/mcp.api.v1.ClientService/Ping',
                request_serializer=mcp_dot_api_dot_v1_dot_client__pb2.PingRequest.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_client__pb2.Empty.FromString,
                )


class ClientServiceServicer(object):
    """Service describing available methods exposed by an MCP client.
    """

    def CreateElicitation(self, request, context):
        """Elicit additional information from the user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateMessage(self, request, context):
        """Instruct the client to sample an LLM and return its message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRoots(self, request, context):
        """Request the client to list roots.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ping(self, request, context):
        """Ping the other party to check if it is still alive.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClientServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateElicitation': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateElicitation,
                    request_deserializer=mcp_dot_api_dot_v1_dot_client__pb2.ElicitRequest.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_client__pb2.ElicitResult.SerializeToString,
            ),
            'CreateMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMessage,
                    request_deserializer=mcp_dot_api_dot_v1_dot_client__pb2.CreateMessageRequest.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_client__pb2.CreateMessageResult.SerializeToString,
            ),
            'ListRoots': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRoots,
                    request_deserializer=mcp_dot_api_dot_v1_dot_client__pb2.ListRootsRequest.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_client__pb2.ListRootsResult.SerializeToString,
            ),
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=mcp_dot_api_dot_v1_dot_client__pb2.PingRequest.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_client__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mcp.api.v1.ClientService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ClientService(object):
    """Service describing available methods exposed by an MCP client.
    """

    @staticmethod
    def CreateElicitation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ClientService/CreateElicitation',
            mcp_dot_api_dot_v1_dot_client__pb2.ElicitRequest.SerializeToString,
            mcp_dot_api_dot_v1_dot_client__pb2.ElicitResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ClientService/CreateMessage',
            mcp_dot_api_dot_v1_dot_client__pb2.CreateMessageRequest.SerializeToString,
            mcp_dot_api_dot_v1_dot_client__pb2.CreateMessageResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListRoots(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ClientService/ListRoots',
            mcp_dot_api_dot_v1_dot_client__pb2.ListRootsRequest.SerializeToString,
            mcp_dot_api_dot_v1_dot_client__pb2.ListRootsResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ClientService/Ping',
            mcp_dot_api_dot_v1_dot_client__pb2.PingRequest.SerializeToString,
            mcp_dot_api_dot_v1_dot_client__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
