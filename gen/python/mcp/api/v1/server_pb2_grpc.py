# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from mcp.api.v1 import server_pb2 as mcp_dot_api_dot_v1_dot_server__pb2


class ServerNotificationServiceStub(object):
    """Service describing notifications sent by the server.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Cancelled = channel.unary_unary(
                '/mcp.api.v1.ServerNotificationService/Cancelled',
                request_serializer=mcp_dot_api_dot_v1_dot_server__pb2.CancelledNotification.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
                )
        self.Message = channel.unary_unary(
                '/mcp.api.v1.ServerNotificationService/Message',
                request_serializer=mcp_dot_api_dot_v1_dot_server__pb2.LoggingMessageNotification.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
                )
        self.Progress = channel.unary_unary(
                '/mcp.api.v1.ServerNotificationService/Progress',
                request_serializer=mcp_dot_api_dot_v1_dot_server__pb2.ProgressNotification.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
                )
        self.PromptListChanged = channel.unary_unary(
                '/mcp.api.v1.ServerNotificationService/PromptListChanged',
                request_serializer=mcp_dot_api_dot_v1_dot_server__pb2.PromptListChangedNotification.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
                )
        self.ResourceListChanged = channel.unary_unary(
                '/mcp.api.v1.ServerNotificationService/ResourceListChanged',
                request_serializer=mcp_dot_api_dot_v1_dot_server__pb2.ResourceListChangedNotification.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
                )
        self.ResourceUpdated = channel.unary_unary(
                '/mcp.api.v1.ServerNotificationService/ResourceUpdated',
                request_serializer=mcp_dot_api_dot_v1_dot_server__pb2.ResourceUpdatedNotification.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
                )
        self.ToolListChanged = channel.unary_unary(
                '/mcp.api.v1.ServerNotificationService/ToolListChanged',
                request_serializer=mcp_dot_api_dot_v1_dot_server__pb2.ToolListChangedNotification.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
                )


class ServerNotificationServiceServicer(object):
    """Service describing notifications sent by the server.
    """

    def Cancelled(self, request, context):
        """Notify that a previously-issued request is being cancelled.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Message(self, request, context):
        """Send a log message to the client.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Progress(self, request, context):
        """Send a progress notification.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PromptListChanged(self, request, context):
        """Notify that the list of prompts has changed.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResourceListChanged(self, request, context):
        """Notify that the list of resources has changed.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResourceUpdated(self, request, context):
        """Notify that a specific resource has been updated.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ToolListChanged(self, request, context):
        """Notify that the list of tools has changed.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServerNotificationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Cancelled': grpc.unary_unary_rpc_method_handler(
                    servicer.Cancelled,
                    request_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.CancelledNotification.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.SerializeToString,
            ),
            'Message': grpc.unary_unary_rpc_method_handler(
                    servicer.Message,
                    request_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.LoggingMessageNotification.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.SerializeToString,
            ),
            'Progress': grpc.unary_unary_rpc_method_handler(
                    servicer.Progress,
                    request_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.ProgressNotification.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.SerializeToString,
            ),
            'PromptListChanged': grpc.unary_unary_rpc_method_handler(
                    servicer.PromptListChanged,
                    request_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.PromptListChangedNotification.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.SerializeToString,
            ),
            'ResourceListChanged': grpc.unary_unary_rpc_method_handler(
                    servicer.ResourceListChanged,
                    request_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.ResourceListChangedNotification.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.SerializeToString,
            ),
            'ResourceUpdated': grpc.unary_unary_rpc_method_handler(
                    servicer.ResourceUpdated,
                    request_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.ResourceUpdatedNotification.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.SerializeToString,
            ),
            'ToolListChanged': grpc.unary_unary_rpc_method_handler(
                    servicer.ToolListChanged,
                    request_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.ToolListChangedNotification.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mcp.api.v1.ServerNotificationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServerNotificationService(object):
    """Service describing notifications sent by the server.
    """

    @staticmethod
    def Cancelled(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ServerNotificationService/Cancelled',
            mcp_dot_api_dot_v1_dot_server__pb2.CancelledNotification.SerializeToString,
            mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Message(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ServerNotificationService/Message',
            mcp_dot_api_dot_v1_dot_server__pb2.LoggingMessageNotification.SerializeToString,
            mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Progress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ServerNotificationService/Progress',
            mcp_dot_api_dot_v1_dot_server__pb2.ProgressNotification.SerializeToString,
            mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PromptListChanged(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ServerNotificationService/PromptListChanged',
            mcp_dot_api_dot_v1_dot_server__pb2.PromptListChangedNotification.SerializeToString,
            mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResourceListChanged(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ServerNotificationService/ResourceListChanged',
            mcp_dot_api_dot_v1_dot_server__pb2.ResourceListChangedNotification.SerializeToString,
            mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResourceUpdated(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ServerNotificationService/ResourceUpdated',
            mcp_dot_api_dot_v1_dot_server__pb2.ResourceUpdatedNotification.SerializeToString,
            mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ToolListChanged(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ServerNotificationService/ToolListChanged',
            mcp_dot_api_dot_v1_dot_server__pb2.ToolListChangedNotification.SerializeToString,
            mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

class ServerServiceStub(object):
    """Service describing available methods exposed by an MCP server.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CallTool = channel.unary_unary(
                '/mcp.api.v1.ServerService/CallTool',
                request_serializer=mcp_dot_api_dot_v1_dot_server__pb2.CallToolRequest.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.CallToolResult.FromString,
                )
        self.Complete = channel.unary_unary(
                '/mcp.api.v1.ServerService/Complete',
                request_serializer=mcp_dot_api_dot_v1_dot_server__pb2.CompleteRequest.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.CompleteResult.FromString,
                )
        self.GetPrompt = channel.unary_unary(
                '/mcp.api.v1.ServerService/GetPrompt',
                request_serializer=mcp_dot_api_dot_v1_dot_server__pb2.GetPromptRequest.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.GetPromptResult.FromString,
                )
        self.Initialize = channel.unary_unary(
                '/mcp.api.v1.ServerService/Initialize',
                request_serializer=mcp_dot_api_dot_v1_dot_server__pb2.InitializeRequest.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.InitializeResult.FromString,
                )
        self.ListPrompts = channel.unary_unary(
                '/mcp.api.v1.ServerService/ListPrompts',
                request_serializer=mcp_dot_api_dot_v1_dot_server__pb2.ListPromptsRequest.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.ListPromptsResult.FromString,
                )
        self.ListResources = channel.unary_unary(
                '/mcp.api.v1.ServerService/ListResources',
                request_serializer=mcp_dot_api_dot_v1_dot_server__pb2.ListResourcesRequest.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.ListResourcesResult.FromString,
                )
        self.ListResourceTemplates = channel.unary_unary(
                '/mcp.api.v1.ServerService/ListResourceTemplates',
                request_serializer=mcp_dot_api_dot_v1_dot_server__pb2.ListResourceTemplatesRequest.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.ListResourceTemplatesResult.FromString,
                )
        self.ListTools = channel.unary_unary(
                '/mcp.api.v1.ServerService/ListTools',
                request_serializer=mcp_dot_api_dot_v1_dot_server__pb2.ListToolsRequest.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.ListToolsResult.FromString,
                )
        self.Ping = channel.unary_unary(
                '/mcp.api.v1.ServerService/Ping',
                request_serializer=mcp_dot_api_dot_v1_dot_server__pb2.PingRequest.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
                )
        self.ReadResource = channel.unary_unary(
                '/mcp.api.v1.ServerService/ReadResource',
                request_serializer=mcp_dot_api_dot_v1_dot_server__pb2.ReadResourceRequest.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.ReadResourceResult.FromString,
                )
        self.SetLevel = channel.unary_unary(
                '/mcp.api.v1.ServerService/SetLevel',
                request_serializer=mcp_dot_api_dot_v1_dot_server__pb2.SetLevelRequest.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
                )
        self.Subscribe = channel.unary_unary(
                '/mcp.api.v1.ServerService/Subscribe',
                request_serializer=mcp_dot_api_dot_v1_dot_server__pb2.SubscribeRequest.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
                )
        self.Unsubscribe = channel.unary_unary(
                '/mcp.api.v1.ServerService/Unsubscribe',
                request_serializer=mcp_dot_api_dot_v1_dot_server__pb2.UnsubscribeRequest.SerializeToString,
                response_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
                )


class ServerServiceServicer(object):
    """Service describing available methods exposed by an MCP server.
    """

    def CallTool(self, request, context):
        """Invoke a tool by name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Complete(self, request, context):
        """Ask for completion options.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPrompt(self, request, context):
        """Retrieve a single prompt by name.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Initialize(self, request, context):
        """Initiate the connection with the server.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPrompts(self, request, context):
        """List available prompts.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListResources(self, request, context):
        """List available resources.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListResourceTemplates(self, request, context):
        """List available resource templates.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTools(self, request, context):
        """List available tools.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ping(self, request, context):
        """Ping the other party to check if it is still alive.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadResource(self, request, context):
        """Read a specific resource by URI.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLevel(self, request, context):
        """Set the minimum log level for notifications.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Subscribe(self, request, context):
        """Request resources/updated notifications for a resource.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unsubscribe(self, request, context):
        """Request cancellation of resources/updated notifications.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CallTool': grpc.unary_unary_rpc_method_handler(
                    servicer.CallTool,
                    request_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.CallToolRequest.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_server__pb2.CallToolResult.SerializeToString,
            ),
            'Complete': grpc.unary_unary_rpc_method_handler(
                    servicer.Complete,
                    request_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.CompleteRequest.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_server__pb2.CompleteResult.SerializeToString,
            ),
            'GetPrompt': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPrompt,
                    request_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.GetPromptRequest.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_server__pb2.GetPromptResult.SerializeToString,
            ),
            'Initialize': grpc.unary_unary_rpc_method_handler(
                    servicer.Initialize,
                    request_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.InitializeRequest.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_server__pb2.InitializeResult.SerializeToString,
            ),
            'ListPrompts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPrompts,
                    request_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.ListPromptsRequest.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_server__pb2.ListPromptsResult.SerializeToString,
            ),
            'ListResources': grpc.unary_unary_rpc_method_handler(
                    servicer.ListResources,
                    request_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.ListResourcesRequest.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_server__pb2.ListResourcesResult.SerializeToString,
            ),
            'ListResourceTemplates': grpc.unary_unary_rpc_method_handler(
                    servicer.ListResourceTemplates,
                    request_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.ListResourceTemplatesRequest.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_server__pb2.ListResourceTemplatesResult.SerializeToString,
            ),
            'ListTools': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTools,
                    request_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.ListToolsRequest.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_server__pb2.ListToolsResult.SerializeToString,
            ),
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.PingRequest.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.SerializeToString,
            ),
            'ReadResource': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadResource,
                    request_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.ReadResourceRequest.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_server__pb2.ReadResourceResult.SerializeToString,
            ),
            'SetLevel': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLevel,
                    request_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.SetLevelRequest.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.SerializeToString,
            ),
            'Subscribe': grpc.unary_unary_rpc_method_handler(
                    servicer.Subscribe,
                    request_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.SubscribeRequest.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.SerializeToString,
            ),
            'Unsubscribe': grpc.unary_unary_rpc_method_handler(
                    servicer.Unsubscribe,
                    request_deserializer=mcp_dot_api_dot_v1_dot_server__pb2.UnsubscribeRequest.FromString,
                    response_serializer=mcp_dot_api_dot_v1_dot_server__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mcp.api.v1.ServerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServerService(object):
    """Service describing available methods exposed by an MCP server.
    """

    @staticmethod
    def CallTool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ServerService/CallTool',
            mcp_dot_api_dot_v1_dot_server__pb2.CallToolRequest.SerializeToString,
            mcp_dot_api_dot_v1_dot_server__pb2.CallToolResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Complete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ServerService/Complete',
            mcp_dot_api_dot_v1_dot_server__pb2.CompleteRequest.SerializeToString,
            mcp_dot_api_dot_v1_dot_server__pb2.CompleteResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPrompt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ServerService/GetPrompt',
            mcp_dot_api_dot_v1_dot_server__pb2.GetPromptRequest.SerializeToString,
            mcp_dot_api_dot_v1_dot_server__pb2.GetPromptResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Initialize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ServerService/Initialize',
            mcp_dot_api_dot_v1_dot_server__pb2.InitializeRequest.SerializeToString,
            mcp_dot_api_dot_v1_dot_server__pb2.InitializeResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPrompts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ServerService/ListPrompts',
            mcp_dot_api_dot_v1_dot_server__pb2.ListPromptsRequest.SerializeToString,
            mcp_dot_api_dot_v1_dot_server__pb2.ListPromptsResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListResources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ServerService/ListResources',
            mcp_dot_api_dot_v1_dot_server__pb2.ListResourcesRequest.SerializeToString,
            mcp_dot_api_dot_v1_dot_server__pb2.ListResourcesResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListResourceTemplates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ServerService/ListResourceTemplates',
            mcp_dot_api_dot_v1_dot_server__pb2.ListResourceTemplatesRequest.SerializeToString,
            mcp_dot_api_dot_v1_dot_server__pb2.ListResourceTemplatesResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTools(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ServerService/ListTools',
            mcp_dot_api_dot_v1_dot_server__pb2.ListToolsRequest.SerializeToString,
            mcp_dot_api_dot_v1_dot_server__pb2.ListToolsResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ServerService/Ping',
            mcp_dot_api_dot_v1_dot_server__pb2.PingRequest.SerializeToString,
            mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadResource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ServerService/ReadResource',
            mcp_dot_api_dot_v1_dot_server__pb2.ReadResourceRequest.SerializeToString,
            mcp_dot_api_dot_v1_dot_server__pb2.ReadResourceResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetLevel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ServerService/SetLevel',
            mcp_dot_api_dot_v1_dot_server__pb2.SetLevelRequest.SerializeToString,
            mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Subscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ServerService/Subscribe',
            mcp_dot_api_dot_v1_dot_server__pb2.SubscribeRequest.SerializeToString,
            mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unsubscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mcp.api.v1.ServerService/Unsubscribe',
            mcp_dot_api_dot_v1_dot_server__pb2.UnsubscribeRequest.SerializeToString,
            mcp_dot_api_dot_v1_dot_server__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
