// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: mcp/server/v1/capabilities.proto

package server

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Capabilities that a server may support. Known capabilities are defined here, in this schema,
// but this is not a closed set: any server can define its own, additional capabilities.
type ServerCapabilities struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Present if the server supports argument autocompletion suggestions.
	Completions *structpb.Struct `protobuf:"bytes,1,opt,name=completions" json:"completions,omitempty"`
	// Experimental, non-standard capabilities that the server supports.
	Experimental map[string]*structpb.Struct `protobuf:"bytes,2,rep,name=experimental" json:"experimental,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Present if the server supports sending log messages to the client.
	Logging *structpb.Struct `protobuf:"bytes,3,opt,name=logging" json:"logging,omitempty"`
	// Present if the server offers any prompt templates.
	Prompts *ServerCapabilities_Prompts `protobuf:"bytes,4,opt,name=prompts" json:"prompts,omitempty"`
	// Present if the server offers any resources to read.
	Resources *ServerCapabilities_Resources `protobuf:"bytes,5,opt,name=resources" json:"resources,omitempty"`
	// Present if the server offers any tools to call.
	Tools         *ServerCapabilities_Tools `protobuf:"bytes,6,opt,name=tools" json:"tools,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerCapabilities) Reset() {
	*x = ServerCapabilities{}
	mi := &file_mcp_server_v1_capabilities_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerCapabilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCapabilities) ProtoMessage() {}

func (x *ServerCapabilities) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_server_v1_capabilities_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCapabilities.ProtoReflect.Descriptor instead.
func (*ServerCapabilities) Descriptor() ([]byte, []int) {
	return file_mcp_server_v1_capabilities_proto_rawDescGZIP(), []int{0}
}

func (x *ServerCapabilities) GetCompletions() *structpb.Struct {
	if x != nil {
		return x.Completions
	}
	return nil
}

func (x *ServerCapabilities) GetExperimental() map[string]*structpb.Struct {
	if x != nil {
		return x.Experimental
	}
	return nil
}

func (x *ServerCapabilities) GetLogging() *structpb.Struct {
	if x != nil {
		return x.Logging
	}
	return nil
}

func (x *ServerCapabilities) GetPrompts() *ServerCapabilities_Prompts {
	if x != nil {
		return x.Prompts
	}
	return nil
}

func (x *ServerCapabilities) GetResources() *ServerCapabilities_Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ServerCapabilities) GetTools() *ServerCapabilities_Tools {
	if x != nil {
		return x.Tools
	}
	return nil
}

// Present if the server offers any prompt templates.
type ServerCapabilities_Prompts struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether this server supports notifications for changes to the prompt list.
	ListChanged   *bool `protobuf:"varint,1,opt,name=list_changed,json=listChanged" json:"list_changed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerCapabilities_Prompts) Reset() {
	*x = ServerCapabilities_Prompts{}
	mi := &file_mcp_server_v1_capabilities_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerCapabilities_Prompts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCapabilities_Prompts) ProtoMessage() {}

func (x *ServerCapabilities_Prompts) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_server_v1_capabilities_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCapabilities_Prompts.ProtoReflect.Descriptor instead.
func (*ServerCapabilities_Prompts) Descriptor() ([]byte, []int) {
	return file_mcp_server_v1_capabilities_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ServerCapabilities_Prompts) GetListChanged() bool {
	if x != nil && x.ListChanged != nil {
		return *x.ListChanged
	}
	return false
}

// Present if the server offers any resources to read.
type ServerCapabilities_Resources struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether this server supports notifications for changes to the resource list.
	ListChanged *bool `protobuf:"varint,1,opt,name=list_changed,json=listChanged" json:"list_changed,omitempty"`
	// Whether this server supports subscribing to resource updates.
	Subscribe     *bool `protobuf:"varint,2,opt,name=subscribe" json:"subscribe,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerCapabilities_Resources) Reset() {
	*x = ServerCapabilities_Resources{}
	mi := &file_mcp_server_v1_capabilities_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerCapabilities_Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCapabilities_Resources) ProtoMessage() {}

func (x *ServerCapabilities_Resources) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_server_v1_capabilities_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCapabilities_Resources.ProtoReflect.Descriptor instead.
func (*ServerCapabilities_Resources) Descriptor() ([]byte, []int) {
	return file_mcp_server_v1_capabilities_proto_rawDescGZIP(), []int{0, 2}
}

func (x *ServerCapabilities_Resources) GetListChanged() bool {
	if x != nil && x.ListChanged != nil {
		return *x.ListChanged
	}
	return false
}

func (x *ServerCapabilities_Resources) GetSubscribe() bool {
	if x != nil && x.Subscribe != nil {
		return *x.Subscribe
	}
	return false
}

// Present if the server offers any tools to call.
type ServerCapabilities_Tools struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether this server supports notifications for changes to the tool list.
	ListChanged   *bool `protobuf:"varint,1,opt,name=list_changed,json=listChanged" json:"list_changed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerCapabilities_Tools) Reset() {
	*x = ServerCapabilities_Tools{}
	mi := &file_mcp_server_v1_capabilities_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerCapabilities_Tools) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerCapabilities_Tools) ProtoMessage() {}

func (x *ServerCapabilities_Tools) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_server_v1_capabilities_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerCapabilities_Tools.ProtoReflect.Descriptor instead.
func (*ServerCapabilities_Tools) Descriptor() ([]byte, []int) {
	return file_mcp_server_v1_capabilities_proto_rawDescGZIP(), []int{0, 3}
}

func (x *ServerCapabilities_Tools) GetListChanged() bool {
	if x != nil && x.ListChanged != nil {
		return *x.ListChanged
	}
	return false
}

var File_mcp_server_v1_capabilities_proto protoreflect.FileDescriptor

const file_mcp_server_v1_capabilities_proto_rawDesc = "" +
	"\n" +
	" mcp/server/v1/capabilities.proto\x12\rmcp.server.v1\x1a\x1cgoogle/protobuf/struct.proto\"\xac\x05\n" +
	"\x12ServerCapabilities\x129\n" +
	"\vcompletions\x18\x01 \x01(\v2\x17.google.protobuf.StructR\vcompletions\x12W\n" +
	"\fexperimental\x18\x02 \x03(\v23.mcp.server.v1.ServerCapabilities.ExperimentalEntryR\fexperimental\x121\n" +
	"\alogging\x18\x03 \x01(\v2\x17.google.protobuf.StructR\alogging\x12C\n" +
	"\aprompts\x18\x04 \x01(\v2).mcp.server.v1.ServerCapabilities.PromptsR\aprompts\x12I\n" +
	"\tresources\x18\x05 \x01(\v2+.mcp.server.v1.ServerCapabilities.ResourcesR\tresources\x12=\n" +
	"\x05tools\x18\x06 \x01(\v2'.mcp.server.v1.ServerCapabilities.ToolsR\x05tools\x1aX\n" +
	"\x11ExperimentalEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12-\n" +
	"\x05value\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x05value:\x028\x01\x1a,\n" +
	"\aPrompts\x12!\n" +
	"\flist_changed\x18\x01 \x01(\bR\vlistChanged\x1aL\n" +
	"\tResources\x12!\n" +
	"\flist_changed\x18\x01 \x01(\bR\vlistChanged\x12\x1c\n" +
	"\tsubscribe\x18\x02 \x01(\bR\tsubscribe\x1a*\n" +
	"\x05Tools\x12!\n" +
	"\flist_changed\x18\x01 \x01(\bR\vlistChangedB\x91\x01\n" +
	"\x14org.mcp.server.modelB\x11CapabilitiesProtoH\x01P\x01Z\x0epkg/mcp/server\xa2\x02\x03MSX\xaa\x02\rMcp.Server.V1\xca\x02\rMcp\\Server\\V1\xe2\x02\x19Mcp\\Server\\V1\\GPBMetadata\xea\x02\x0fMcp::Server::V1b\beditionsp\xe8\a"

var (
	file_mcp_server_v1_capabilities_proto_rawDescOnce sync.Once
	file_mcp_server_v1_capabilities_proto_rawDescData []byte
)

func file_mcp_server_v1_capabilities_proto_rawDescGZIP() []byte {
	file_mcp_server_v1_capabilities_proto_rawDescOnce.Do(func() {
		file_mcp_server_v1_capabilities_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mcp_server_v1_capabilities_proto_rawDesc), len(file_mcp_server_v1_capabilities_proto_rawDesc)))
	})
	return file_mcp_server_v1_capabilities_proto_rawDescData
}

var file_mcp_server_v1_capabilities_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_mcp_server_v1_capabilities_proto_goTypes = []any{
	(*ServerCapabilities)(nil),           // 0: mcp.server.v1.ServerCapabilities
	nil,                                  // 1: mcp.server.v1.ServerCapabilities.ExperimentalEntry
	(*ServerCapabilities_Prompts)(nil),   // 2: mcp.server.v1.ServerCapabilities.Prompts
	(*ServerCapabilities_Resources)(nil), // 3: mcp.server.v1.ServerCapabilities.Resources
	(*ServerCapabilities_Tools)(nil),     // 4: mcp.server.v1.ServerCapabilities.Tools
	(*structpb.Struct)(nil),              // 5: google.protobuf.Struct
}
var file_mcp_server_v1_capabilities_proto_depIdxs = []int32{
	5, // 0: mcp.server.v1.ServerCapabilities.completions:type_name -> google.protobuf.Struct
	1, // 1: mcp.server.v1.ServerCapabilities.experimental:type_name -> mcp.server.v1.ServerCapabilities.ExperimentalEntry
	5, // 2: mcp.server.v1.ServerCapabilities.logging:type_name -> google.protobuf.Struct
	2, // 3: mcp.server.v1.ServerCapabilities.prompts:type_name -> mcp.server.v1.ServerCapabilities.Prompts
	3, // 4: mcp.server.v1.ServerCapabilities.resources:type_name -> mcp.server.v1.ServerCapabilities.Resources
	4, // 5: mcp.server.v1.ServerCapabilities.tools:type_name -> mcp.server.v1.ServerCapabilities.Tools
	5, // 6: mcp.server.v1.ServerCapabilities.ExperimentalEntry.value:type_name -> google.protobuf.Struct
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_mcp_server_v1_capabilities_proto_init() }
func file_mcp_server_v1_capabilities_proto_init() {
	if File_mcp_server_v1_capabilities_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mcp_server_v1_capabilities_proto_rawDesc), len(file_mcp_server_v1_capabilities_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mcp_server_v1_capabilities_proto_goTypes,
		DependencyIndexes: file_mcp_server_v1_capabilities_proto_depIdxs,
		MessageInfos:      file_mcp_server_v1_capabilities_proto_msgTypes,
	}.Build()
	File_mcp_server_v1_capabilities_proto = out.File
	file_mcp_server_v1_capabilities_proto_goTypes = nil
	file_mcp_server_v1_capabilities_proto_depIdxs = nil
}
