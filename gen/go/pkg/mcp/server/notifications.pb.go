// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: mcp/server/v1/notifications.proto

package server

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Sent by either side to indicate that it is cancelling a previously-issued request.
type CancelledNotification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The method name.
	Method *string `protobuf:"bytes,1,opt,name=method,def=notifications/cancelled" json:"method,omitempty"`
	// Parameters for the cancellation notification.
	Params        *CancelledNotification_Params `protobuf:"bytes,2,opt,name=params" json:"params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CancelledNotification fields.
const (
	Default_CancelledNotification_Method = string("notifications/cancelled")
)

func (x *CancelledNotification) Reset() {
	*x = CancelledNotification{}
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelledNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelledNotification) ProtoMessage() {}

func (x *CancelledNotification) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelledNotification.ProtoReflect.Descriptor instead.
func (*CancelledNotification) Descriptor() ([]byte, []int) {
	return file_mcp_server_v1_notifications_proto_rawDescGZIP(), []int{0}
}

func (x *CancelledNotification) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return Default_CancelledNotification_Method
}

func (x *CancelledNotification) GetParams() *CancelledNotification_Params {
	if x != nil {
		return x.Params
	}
	return nil
}

// Notification of a log message passed from server to client.
type LoggingMessageNotification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The method name.
	Method *string `protobuf:"bytes,1,opt,name=method,def=notifications/message" json:"method,omitempty"`
	// The notification parameters.
	Params        *LoggingMessageNotification_Params `protobuf:"bytes,2,opt,name=params" json:"params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for LoggingMessageNotification fields.
const (
	Default_LoggingMessageNotification_Method = string("notifications/message")
)

func (x *LoggingMessageNotification) Reset() {
	*x = LoggingMessageNotification{}
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoggingMessageNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggingMessageNotification) ProtoMessage() {}

func (x *LoggingMessageNotification) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoggingMessageNotification.ProtoReflect.Descriptor instead.
func (*LoggingMessageNotification) Descriptor() ([]byte, []int) {
	return file_mcp_server_v1_notifications_proto_rawDescGZIP(), []int{1}
}

func (x *LoggingMessageNotification) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return Default_LoggingMessageNotification_Method
}

func (x *LoggingMessageNotification) GetParams() *LoggingMessageNotification_Params {
	if x != nil {
		return x.Params
	}
	return nil
}

// An out-of-band notification used to inform the receiver of a progress update for a long-running request.
type ProgressNotification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The method name.
	Method *string `protobuf:"bytes,1,opt,name=method,def=notifications/progress" json:"method,omitempty"`
	// The progress notification parameters.
	Params        *ProgressNotification_Params `protobuf:"bytes,2,opt,name=params" json:"params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for ProgressNotification fields.
const (
	Default_ProgressNotification_Method = string("notifications/progress")
)

func (x *ProgressNotification) Reset() {
	*x = ProgressNotification{}
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProgressNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressNotification) ProtoMessage() {}

func (x *ProgressNotification) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressNotification.ProtoReflect.Descriptor instead.
func (*ProgressNotification) Descriptor() ([]byte, []int) {
	return file_mcp_server_v1_notifications_proto_rawDescGZIP(), []int{2}
}

func (x *ProgressNotification) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return Default_ProgressNotification_Method
}

func (x *ProgressNotification) GetParams() *ProgressNotification_Params {
	if x != nil {
		return x.Params
	}
	return nil
}

// Notification that the list of prompts has changed.
type PromptListChangedNotification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The method name.
	Method        *string `protobuf:"bytes,1,opt,name=method,def=notifications/prompts/list_changed" json:"method,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for PromptListChangedNotification fields.
const (
	Default_PromptListChangedNotification_Method = string("notifications/prompts/list_changed")
)

func (x *PromptListChangedNotification) Reset() {
	*x = PromptListChangedNotification{}
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromptListChangedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptListChangedNotification) ProtoMessage() {}

func (x *PromptListChangedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptListChangedNotification.ProtoReflect.Descriptor instead.
func (*PromptListChangedNotification) Descriptor() ([]byte, []int) {
	return file_mcp_server_v1_notifications_proto_rawDescGZIP(), []int{3}
}

func (x *PromptListChangedNotification) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return Default_PromptListChangedNotification_Method
}

// Informing the client that the list of resources has changed.
type ResourceListChangedNotification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The method name.
	Method        *string `protobuf:"bytes,1,opt,name=method,def=notifications/resources/list_changed" json:"method,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for ResourceListChangedNotification fields.
const (
	Default_ResourceListChangedNotification_Method = string("notifications/resources/list_changed")
)

func (x *ResourceListChangedNotification) Reset() {
	*x = ResourceListChangedNotification{}
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceListChangedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceListChangedNotification) ProtoMessage() {}

func (x *ResourceListChangedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceListChangedNotification.ProtoReflect.Descriptor instead.
func (*ResourceListChangedNotification) Descriptor() ([]byte, []int) {
	return file_mcp_server_v1_notifications_proto_rawDescGZIP(), []int{4}
}

func (x *ResourceListChangedNotification) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return Default_ResourceListChangedNotification_Method
}

// Informing the client that a resource has changed and may need to be read again.
type ResourceUpdatedNotification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The method name.
	Method *string `protobuf:"bytes,1,opt,name=method,def=notifications/resources/updated" json:"method,omitempty"`
	// The notification parameters.
	Params        *ResourceUpdatedNotification_Params `protobuf:"bytes,2,opt,name=params" json:"params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for ResourceUpdatedNotification fields.
const (
	Default_ResourceUpdatedNotification_Method = string("notifications/resources/updated")
)

func (x *ResourceUpdatedNotification) Reset() {
	*x = ResourceUpdatedNotification{}
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceUpdatedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceUpdatedNotification) ProtoMessage() {}

func (x *ResourceUpdatedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceUpdatedNotification.ProtoReflect.Descriptor instead.
func (*ResourceUpdatedNotification) Descriptor() ([]byte, []int) {
	return file_mcp_server_v1_notifications_proto_rawDescGZIP(), []int{5}
}

func (x *ResourceUpdatedNotification) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return Default_ResourceUpdatedNotification_Method
}

func (x *ResourceUpdatedNotification) GetParams() *ResourceUpdatedNotification_Params {
	if x != nil {
		return x.Params
	}
	return nil
}

// Notification that the list of tools has changed.
type ToolListChangedNotification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The method name.
	Method        *string `protobuf:"bytes,1,opt,name=method,def=notifications/tools/list_changed" json:"method,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for ToolListChangedNotification fields.
const (
	Default_ToolListChangedNotification_Method = string("notifications/tools/list_changed")
)

func (x *ToolListChangedNotification) Reset() {
	*x = ToolListChangedNotification{}
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolListChangedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolListChangedNotification) ProtoMessage() {}

func (x *ToolListChangedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolListChangedNotification.ProtoReflect.Descriptor instead.
func (*ToolListChangedNotification) Descriptor() ([]byte, []int) {
	return file_mcp_server_v1_notifications_proto_rawDescGZIP(), []int{6}
}

func (x *ToolListChangedNotification) GetMethod() string {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return Default_ToolListChangedNotification_Method
}

// The parameters of a CancelledNotification.
type CancelledNotification_Params struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the request to cancel.
	RequestId *RequestId `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	// An optional string describing the reason for the cancellation.
	Reason        *string `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelledNotification_Params) Reset() {
	*x = CancelledNotification_Params{}
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelledNotification_Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelledNotification_Params) ProtoMessage() {}

func (x *CancelledNotification_Params) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelledNotification_Params.ProtoReflect.Descriptor instead.
func (*CancelledNotification_Params) Descriptor() ([]byte, []int) {
	return file_mcp_server_v1_notifications_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CancelledNotification_Params) GetRequestId() *RequestId {
	if x != nil {
		return x.RequestId
	}
	return nil
}

func (x *CancelledNotification_Params) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

// Parameters for LoggingMessageNotification.
type LoggingMessageNotification_Params struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The severity of this log message.
	Level *LoggingLevel `protobuf:"varint,1,opt,name=level,enum=mcp.server.v1.LoggingLevel" json:"level,omitempty"`
	// An optional name of the logger issuing this message.
	Logger *string `protobuf:"bytes,2,opt,name=logger" json:"logger,omitempty"`
	// The data to be logged (string or object).
	Data          *structpb.Value `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoggingMessageNotification_Params) Reset() {
	*x = LoggingMessageNotification_Params{}
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoggingMessageNotification_Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggingMessageNotification_Params) ProtoMessage() {}

func (x *LoggingMessageNotification_Params) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoggingMessageNotification_Params.ProtoReflect.Descriptor instead.
func (*LoggingMessageNotification_Params) Descriptor() ([]byte, []int) {
	return file_mcp_server_v1_notifications_proto_rawDescGZIP(), []int{1, 0}
}

func (x *LoggingMessageNotification_Params) GetLevel() LoggingLevel {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return LoggingLevel_LOGGING_LEVEL_UNSPECIFIED
}

func (x *LoggingMessageNotification_Params) GetLogger() string {
	if x != nil && x.Logger != nil {
		return *x.Logger
	}
	return ""
}

func (x *LoggingMessageNotification_Params) GetData() *structpb.Value {
	if x != nil {
		return x.Data
	}
	return nil
}

// The parameters of a ProgressNotification.
type ProgressNotification_Params struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The progress token which was given in the initial request, used to associate this notification with the request that is proceeding.
	ProgressToken *ProgressToken `protobuf:"bytes,1,opt,name=progress_token,json=progressToken" json:"progress_token,omitempty"`
	// The progress thus far. This should increase every time progress is made, even if the total is unknown.
	Progress *float64 `protobuf:"fixed64,2,opt,name=progress" json:"progress,omitempty"`
	// Total number of items to process (or total progress required), if known.
	Total *float64 `protobuf:"fixed64,3,opt,name=total" json:"total,omitempty"`
	// An optional message describing the current progress.
	Message       *string `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProgressNotification_Params) Reset() {
	*x = ProgressNotification_Params{}
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProgressNotification_Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressNotification_Params) ProtoMessage() {}

func (x *ProgressNotification_Params) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressNotification_Params.ProtoReflect.Descriptor instead.
func (*ProgressNotification_Params) Descriptor() ([]byte, []int) {
	return file_mcp_server_v1_notifications_proto_rawDescGZIP(), []int{2, 0}
}

func (x *ProgressNotification_Params) GetProgressToken() *ProgressToken {
	if x != nil {
		return x.ProgressToken
	}
	return nil
}

func (x *ProgressNotification_Params) GetProgress() float64 {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return 0
}

func (x *ProgressNotification_Params) GetTotal() float64 {
	if x != nil && x.Total != nil {
		return *x.Total
	}
	return 0
}

func (x *ProgressNotification_Params) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

// Parameters for ResourceUpdatedNotification.
type ResourceUpdatedNotification_Params struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The URI of the resource that has been updated.
	Uri           *string `protobuf:"bytes,1,opt,name=uri" json:"uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceUpdatedNotification_Params) Reset() {
	*x = ResourceUpdatedNotification_Params{}
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceUpdatedNotification_Params) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceUpdatedNotification_Params) ProtoMessage() {}

func (x *ResourceUpdatedNotification_Params) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_server_v1_notifications_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceUpdatedNotification_Params.ProtoReflect.Descriptor instead.
func (*ResourceUpdatedNotification_Params) Descriptor() ([]byte, []int) {
	return file_mcp_server_v1_notifications_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ResourceUpdatedNotification_Params) GetUri() string {
	if x != nil && x.Uri != nil {
		return *x.Uri
	}
	return ""
}

var File_mcp_server_v1_notifications_proto protoreflect.FileDescriptor

const file_mcp_server_v1_notifications_proto_rawDesc = "" +
	"\n" +
	"!mcp/server/v1/notifications.proto\x12\rmcp.server.v1\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1amcp/server/v1/common.proto\"\xe8\x01\n" +
	"\x15CancelledNotification\x12/\n" +
	"\x06method\x18\x01 \x01(\t:\x17notifications/cancelledR\x06method\x12C\n" +
	"\x06params\x18\x02 \x01(\v2+.mcp.server.v1.CancelledNotification.ParamsR\x06params\x1aY\n" +
	"\x06Params\x127\n" +
	"\n" +
	"request_id\x18\x01 \x01(\v2\x18.mcp.server.v1.RequestIdR\trequestId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\x96\x02\n" +
	"\x1aLoggingMessageNotification\x12-\n" +
	"\x06method\x18\x01 \x01(\t:\x15notifications/messageR\x06method\x12H\n" +
	"\x06params\x18\x02 \x01(\v20.mcp.server.v1.LoggingMessageNotification.ParamsR\x06params\x1a\x7f\n" +
	"\x06Params\x121\n" +
	"\x05level\x18\x01 \x01(\x0e2\x1b.mcp.server.v1.LoggingLevelR\x05level\x12\x16\n" +
	"\x06logger\x18\x02 \x01(\tR\x06logger\x12*\n" +
	"\x04data\x18\x03 \x01(\v2\x16.google.protobuf.ValueR\x04data\"\xa6\x02\n" +
	"\x14ProgressNotification\x12.\n" +
	"\x06method\x18\x01 \x01(\t:\x16notifications/progressR\x06method\x12B\n" +
	"\x06params\x18\x02 \x01(\v2*.mcp.server.v1.ProgressNotification.ParamsR\x06params\x1a\x99\x01\n" +
	"\x06Params\x12C\n" +
	"\x0eprogress_token\x18\x01 \x01(\v2\x1c.mcp.server.v1.ProgressTokenR\rprogressToken\x12\x1a\n" +
	"\bprogress\x18\x02 \x01(\x01R\bprogress\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x01R\x05total\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"[\n" +
	"\x1dPromptListChangedNotification\x12:\n" +
	"\x06method\x18\x01 \x01(\t:\"notifications/prompts/list_changedR\x06method\"_\n" +
	"\x1fResourceListChangedNotification\x12<\n" +
	"\x06method\x18\x01 \x01(\t:$notifications/resources/list_changedR\x06method\"\xbd\x01\n" +
	"\x1bResourceUpdatedNotification\x127\n" +
	"\x06method\x18\x01 \x01(\t:\x1fnotifications/resources/updatedR\x06method\x12I\n" +
	"\x06params\x18\x02 \x01(\v21.mcp.server.v1.ResourceUpdatedNotification.ParamsR\x06params\x1a\x1a\n" +
	"\x06Params\x12\x10\n" +
	"\x03uri\x18\x01 \x01(\tR\x03uri\"W\n" +
	"\x1bToolListChangedNotification\x128\n" +
	"\x06method\x18\x01 \x01(\t: notifications/tools/list_changedR\x06methodB\x96\x01\n" +
	"\x18org.mcp.server.resourcesB\x12NotificationsProtoH\x01P\x01Z\x0epkg/mcp/server\xa2\x02\x03MSX\xaa\x02\rMcp.Server.V1\xca\x02\rMcp\\Server\\V1\xe2\x02\x19Mcp\\Server\\V1\\GPBMetadata\xea\x02\x0fMcp::Server::V1b\beditionsp\xe8\a"

var (
	file_mcp_server_v1_notifications_proto_rawDescOnce sync.Once
	file_mcp_server_v1_notifications_proto_rawDescData []byte
)

func file_mcp_server_v1_notifications_proto_rawDescGZIP() []byte {
	file_mcp_server_v1_notifications_proto_rawDescOnce.Do(func() {
		file_mcp_server_v1_notifications_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mcp_server_v1_notifications_proto_rawDesc), len(file_mcp_server_v1_notifications_proto_rawDesc)))
	})
	return file_mcp_server_v1_notifications_proto_rawDescData
}

var file_mcp_server_v1_notifications_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_mcp_server_v1_notifications_proto_goTypes = []any{
	(*CancelledNotification)(nil),              // 0: mcp.server.v1.CancelledNotification
	(*LoggingMessageNotification)(nil),         // 1: mcp.server.v1.LoggingMessageNotification
	(*ProgressNotification)(nil),               // 2: mcp.server.v1.ProgressNotification
	(*PromptListChangedNotification)(nil),      // 3: mcp.server.v1.PromptListChangedNotification
	(*ResourceListChangedNotification)(nil),    // 4: mcp.server.v1.ResourceListChangedNotification
	(*ResourceUpdatedNotification)(nil),        // 5: mcp.server.v1.ResourceUpdatedNotification
	(*ToolListChangedNotification)(nil),        // 6: mcp.server.v1.ToolListChangedNotification
	(*CancelledNotification_Params)(nil),       // 7: mcp.server.v1.CancelledNotification.Params
	(*LoggingMessageNotification_Params)(nil),  // 8: mcp.server.v1.LoggingMessageNotification.Params
	(*ProgressNotification_Params)(nil),        // 9: mcp.server.v1.ProgressNotification.Params
	(*ResourceUpdatedNotification_Params)(nil), // 10: mcp.server.v1.ResourceUpdatedNotification.Params
	(*RequestId)(nil),                          // 11: mcp.server.v1.RequestId
	(LoggingLevel)(0),                          // 12: mcp.server.v1.LoggingLevel
	(*structpb.Value)(nil),                     // 13: google.protobuf.Value
	(*ProgressToken)(nil),                      // 14: mcp.server.v1.ProgressToken
}
var file_mcp_server_v1_notifications_proto_depIdxs = []int32{
	7,  // 0: mcp.server.v1.CancelledNotification.params:type_name -> mcp.server.v1.CancelledNotification.Params
	8,  // 1: mcp.server.v1.LoggingMessageNotification.params:type_name -> mcp.server.v1.LoggingMessageNotification.Params
	9,  // 2: mcp.server.v1.ProgressNotification.params:type_name -> mcp.server.v1.ProgressNotification.Params
	10, // 3: mcp.server.v1.ResourceUpdatedNotification.params:type_name -> mcp.server.v1.ResourceUpdatedNotification.Params
	11, // 4: mcp.server.v1.CancelledNotification.Params.request_id:type_name -> mcp.server.v1.RequestId
	12, // 5: mcp.server.v1.LoggingMessageNotification.Params.level:type_name -> mcp.server.v1.LoggingLevel
	13, // 6: mcp.server.v1.LoggingMessageNotification.Params.data:type_name -> google.protobuf.Value
	14, // 7: mcp.server.v1.ProgressNotification.Params.progress_token:type_name -> mcp.server.v1.ProgressToken
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_mcp_server_v1_notifications_proto_init() }
func file_mcp_server_v1_notifications_proto_init() {
	if File_mcp_server_v1_notifications_proto != nil {
		return
	}
	file_mcp_server_v1_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mcp_server_v1_notifications_proto_rawDesc), len(file_mcp_server_v1_notifications_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mcp_server_v1_notifications_proto_goTypes,
		DependencyIndexes: file_mcp_server_v1_notifications_proto_depIdxs,
		MessageInfos:      file_mcp_server_v1_notifications_proto_msgTypes,
	}.Build()
	File_mcp_server_v1_notifications_proto = out.File
	file_mcp_server_v1_notifications_proto_goTypes = nil
	file_mcp_server_v1_notifications_proto_depIdxs = nil
}
