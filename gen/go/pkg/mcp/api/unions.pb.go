// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: mcp/api/v1/unions.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	client "pkg/mcp/client"
	server "pkg/mcp/server"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Union of all notifications the client may receive.
type ClientNotification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Msg:
	//
	//	*ClientNotification_Cancelled
	//	*ClientNotification_Progress
	//	*ClientNotification_Initialized
	//	*ClientNotification_RootsListChanged
	Msg           isClientNotification_Msg `protobuf_oneof:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientNotification) Reset() {
	*x = ClientNotification{}
	mi := &file_mcp_api_v1_unions_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientNotification) ProtoMessage() {}

func (x *ClientNotification) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_api_v1_unions_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientNotification.ProtoReflect.Descriptor instead.
func (*ClientNotification) Descriptor() ([]byte, []int) {
	return file_mcp_api_v1_unions_proto_rawDescGZIP(), []int{0}
}

func (x *ClientNotification) GetMsg() isClientNotification_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *ClientNotification) GetCancelled() *client.CancelledNotification {
	if x != nil {
		if x, ok := x.Msg.(*ClientNotification_Cancelled); ok {
			return x.Cancelled
		}
	}
	return nil
}

func (x *ClientNotification) GetProgress() *client.ProgressNotification {
	if x != nil {
		if x, ok := x.Msg.(*ClientNotification_Progress); ok {
			return x.Progress
		}
	}
	return nil
}

func (x *ClientNotification) GetInitialized() *client.InitializedNotification {
	if x != nil {
		if x, ok := x.Msg.(*ClientNotification_Initialized); ok {
			return x.Initialized
		}
	}
	return nil
}

func (x *ClientNotification) GetRootsListChanged() *client.RootsListChangedNotification {
	if x != nil {
		if x, ok := x.Msg.(*ClientNotification_RootsListChanged); ok {
			return x.RootsListChanged
		}
	}
	return nil
}

type isClientNotification_Msg interface {
	isClientNotification_Msg()
}

type ClientNotification_Cancelled struct {
	// Cancellation notification.
	Cancelled *client.CancelledNotification `protobuf:"bytes,1,opt,name=cancelled,oneof"`
}

type ClientNotification_Progress struct {
	// Progress notification.
	Progress *client.ProgressNotification `protobuf:"bytes,2,opt,name=progress,oneof"`
}

type ClientNotification_Initialized struct {
	// Initialization finished notification.
	Initialized *client.InitializedNotification `protobuf:"bytes,3,opt,name=initialized,oneof"`
}

type ClientNotification_RootsListChanged struct {
	// Roots list changed notification.
	RootsListChanged *client.RootsListChangedNotification `protobuf:"bytes,4,opt,name=roots_list_changed,json=rootsListChanged,oneof"`
}

func (*ClientNotification_Cancelled) isClientNotification_Msg() {}

func (*ClientNotification_Progress) isClientNotification_Msg() {}

func (*ClientNotification_Initialized) isClientNotification_Msg() {}

func (*ClientNotification_RootsListChanged) isClientNotification_Msg() {}

// Union of all requests the client may send.
type ClientRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Msg:
	//
	//	*ClientRequest_CallTool
	//	*ClientRequest_Complete
	//	*ClientRequest_GetPrompt
	//	*ClientRequest_Initialize
	//	*ClientRequest_ListPrompts
	//	*ClientRequest_ListResourceTemplates
	//	*ClientRequest_ListResources
	//	*ClientRequest_ListTools
	//	*ClientRequest_Ping
	//	*ClientRequest_ReadResource
	//	*ClientRequest_SetLevel
	//	*ClientRequest_Subscribe
	//	*ClientRequest_Unsubscribe
	Msg           isClientRequest_Msg `protobuf_oneof:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientRequest) Reset() {
	*x = ClientRequest{}
	mi := &file_mcp_api_v1_unions_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientRequest) ProtoMessage() {}

func (x *ClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_api_v1_unions_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientRequest.ProtoReflect.Descriptor instead.
func (*ClientRequest) Descriptor() ([]byte, []int) {
	return file_mcp_api_v1_unions_proto_rawDescGZIP(), []int{1}
}

func (x *ClientRequest) GetMsg() isClientRequest_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *ClientRequest) GetCallTool() *client.CallToolRequest {
	if x != nil {
		if x, ok := x.Msg.(*ClientRequest_CallTool); ok {
			return x.CallTool
		}
	}
	return nil
}

func (x *ClientRequest) GetComplete() *client.CompleteRequest {
	if x != nil {
		if x, ok := x.Msg.(*ClientRequest_Complete); ok {
			return x.Complete
		}
	}
	return nil
}

func (x *ClientRequest) GetGetPrompt() *client.GetPromptRequest {
	if x != nil {
		if x, ok := x.Msg.(*ClientRequest_GetPrompt); ok {
			return x.GetPrompt
		}
	}
	return nil
}

func (x *ClientRequest) GetInitialize() *client.InitializeRequest {
	if x != nil {
		if x, ok := x.Msg.(*ClientRequest_Initialize); ok {
			return x.Initialize
		}
	}
	return nil
}

func (x *ClientRequest) GetListPrompts() *client.ListPromptsRequest {
	if x != nil {
		if x, ok := x.Msg.(*ClientRequest_ListPrompts); ok {
			return x.ListPrompts
		}
	}
	return nil
}

func (x *ClientRequest) GetListResourceTemplates() *client.ListResourceTemplatesRequest {
	if x != nil {
		if x, ok := x.Msg.(*ClientRequest_ListResourceTemplates); ok {
			return x.ListResourceTemplates
		}
	}
	return nil
}

func (x *ClientRequest) GetListResources() *client.ListResourcesRequest {
	if x != nil {
		if x, ok := x.Msg.(*ClientRequest_ListResources); ok {
			return x.ListResources
		}
	}
	return nil
}

func (x *ClientRequest) GetListTools() *client.ListToolsRequest {
	if x != nil {
		if x, ok := x.Msg.(*ClientRequest_ListTools); ok {
			return x.ListTools
		}
	}
	return nil
}

func (x *ClientRequest) GetPing() *client.PingRequest {
	if x != nil {
		if x, ok := x.Msg.(*ClientRequest_Ping); ok {
			return x.Ping
		}
	}
	return nil
}

func (x *ClientRequest) GetReadResource() *client.ReadResourceRequest {
	if x != nil {
		if x, ok := x.Msg.(*ClientRequest_ReadResource); ok {
			return x.ReadResource
		}
	}
	return nil
}

func (x *ClientRequest) GetSetLevel() *client.SetLevelRequest {
	if x != nil {
		if x, ok := x.Msg.(*ClientRequest_SetLevel); ok {
			return x.SetLevel
		}
	}
	return nil
}

func (x *ClientRequest) GetSubscribe() *client.SubscribeRequest {
	if x != nil {
		if x, ok := x.Msg.(*ClientRequest_Subscribe); ok {
			return x.Subscribe
		}
	}
	return nil
}

func (x *ClientRequest) GetUnsubscribe() *client.UnsubscribeRequest {
	if x != nil {
		if x, ok := x.Msg.(*ClientRequest_Unsubscribe); ok {
			return x.Unsubscribe
		}
	}
	return nil
}

type isClientRequest_Msg interface {
	isClientRequest_Msg()
}

type ClientRequest_CallTool struct {
	// Call a tool.
	CallTool *client.CallToolRequest `protobuf:"bytes,1,opt,name=call_tool,json=callTool,oneof"`
}

type ClientRequest_Complete struct {
	// Complete an argument (autocomplete).
	Complete *client.CompleteRequest `protobuf:"bytes,2,opt,name=complete,oneof"`
}

type ClientRequest_GetPrompt struct {
	// Get a prompt.
	GetPrompt *client.GetPromptRequest `protobuf:"bytes,3,opt,name=get_prompt,json=getPrompt,oneof"`
}

type ClientRequest_Initialize struct {
	// Initialize handshake.
	Initialize *client.InitializeRequest `protobuf:"bytes,4,opt,name=initialize,oneof"`
}

type ClientRequest_ListPrompts struct {
	// List prompts.
	ListPrompts *client.ListPromptsRequest `protobuf:"bytes,5,opt,name=list_prompts,json=listPrompts,oneof"`
}

type ClientRequest_ListResourceTemplates struct {
	// List resource templates.
	ListResourceTemplates *client.ListResourceTemplatesRequest `protobuf:"bytes,6,opt,name=list_resource_templates,json=listResourceTemplates,oneof"`
}

type ClientRequest_ListResources struct {
	// List resources.
	ListResources *client.ListResourcesRequest `protobuf:"bytes,7,opt,name=list_resources,json=listResources,oneof"`
}

type ClientRequest_ListTools struct {
	// List tools.
	ListTools *client.ListToolsRequest `protobuf:"bytes,8,opt,name=list_tools,json=listTools,oneof"`
}

type ClientRequest_Ping struct {
	// Ping for liveness.
	Ping *client.PingRequest `protobuf:"bytes,9,opt,name=ping,oneof"`
}

type ClientRequest_ReadResource struct {
	// Read a resource.
	ReadResource *client.ReadResourceRequest `protobuf:"bytes,10,opt,name=read_resource,json=readResource,oneof"`
}

type ClientRequest_SetLevel struct {
	// Set logging level.
	SetLevel *client.SetLevelRequest `protobuf:"bytes,11,opt,name=set_level,json=setLevel,oneof"`
}

type ClientRequest_Subscribe struct {
	// Subscribe to resource updates.
	Subscribe *client.SubscribeRequest `protobuf:"bytes,12,opt,name=subscribe,oneof"`
}

type ClientRequest_Unsubscribe struct {
	// Unsubscribe from resource updates.
	Unsubscribe *client.UnsubscribeRequest `protobuf:"bytes,13,opt,name=unsubscribe,oneof"`
}

func (*ClientRequest_CallTool) isClientRequest_Msg() {}

func (*ClientRequest_Complete) isClientRequest_Msg() {}

func (*ClientRequest_GetPrompt) isClientRequest_Msg() {}

func (*ClientRequest_Initialize) isClientRequest_Msg() {}

func (*ClientRequest_ListPrompts) isClientRequest_Msg() {}

func (*ClientRequest_ListResourceTemplates) isClientRequest_Msg() {}

func (*ClientRequest_ListResources) isClientRequest_Msg() {}

func (*ClientRequest_ListTools) isClientRequest_Msg() {}

func (*ClientRequest_Ping) isClientRequest_Msg() {}

func (*ClientRequest_ReadResource) isClientRequest_Msg() {}

func (*ClientRequest_SetLevel) isClientRequest_Msg() {}

func (*ClientRequest_Subscribe) isClientRequest_Msg() {}

func (*ClientRequest_Unsubscribe) isClientRequest_Msg() {}

// Union of all response/result types the client may receive.
type ClientResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Msg:
	//
	//	*ClientResult_Empty
	//	*ClientResult_CreateMessage
	//	*ClientResult_Elicit
	//	*ClientResult_ListRoots
	Msg           isClientResult_Msg `protobuf_oneof:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientResult) Reset() {
	*x = ClientResult{}
	mi := &file_mcp_api_v1_unions_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientResult) ProtoMessage() {}

func (x *ClientResult) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_api_v1_unions_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientResult.ProtoReflect.Descriptor instead.
func (*ClientResult) Descriptor() ([]byte, []int) {
	return file_mcp_api_v1_unions_proto_rawDescGZIP(), []int{2}
}

func (x *ClientResult) GetMsg() isClientResult_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *ClientResult) GetEmpty() *client.EmptyResult {
	if x != nil {
		if x, ok := x.Msg.(*ClientResult_Empty); ok {
			return x.Empty
		}
	}
	return nil
}

func (x *ClientResult) GetCreateMessage() *client.CreateMessageResult {
	if x != nil {
		if x, ok := x.Msg.(*ClientResult_CreateMessage); ok {
			return x.CreateMessage
		}
	}
	return nil
}

func (x *ClientResult) GetElicit() *client.ElicitResult {
	if x != nil {
		if x, ok := x.Msg.(*ClientResult_Elicit); ok {
			return x.Elicit
		}
	}
	return nil
}

func (x *ClientResult) GetListRoots() *client.ListRootsResult {
	if x != nil {
		if x, ok := x.Msg.(*ClientResult_ListRoots); ok {
			return x.ListRoots
		}
	}
	return nil
}

type isClientResult_Msg interface {
	isClientResult_Msg()
}

type ClientResult_Empty struct {
	// Empty result.
	Empty *client.EmptyResult `protobuf:"bytes,1,opt,name=empty,oneof"`
}

type ClientResult_CreateMessage struct {
	// Create message result (sampling).
	CreateMessage *client.CreateMessageResult `protobuf:"bytes,2,opt,name=create_message,json=createMessage,oneof"`
}

type ClientResult_Elicit struct {
	// Elicit result.
	Elicit *client.ElicitResult `protobuf:"bytes,3,opt,name=elicit,oneof"`
}

type ClientResult_ListRoots struct {
	// List roots result.
	ListRoots *client.ListRootsResult `protobuf:"bytes,4,opt,name=list_roots,json=listRoots,oneof"`
}

func (*ClientResult_Empty) isClientResult_Msg() {}

func (*ClientResult_CreateMessage) isClientResult_Msg() {}

func (*ClientResult_Elicit) isClientResult_Msg() {}

func (*ClientResult_ListRoots) isClientResult_Msg() {}

// Union of all notifications the server may receive.
type ServerNotification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Msg:
	//
	//	*ServerNotification_Cancelled
	//	*ServerNotification_Progress
	//	*ServerNotification_LoggingMessage
	//	*ServerNotification_PromptListChanged
	//	*ServerNotification_ResourceListChanged
	//	*ServerNotification_ResourceUpdated
	//	*ServerNotification_ToolListChanged
	Msg           isServerNotification_Msg `protobuf_oneof:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerNotification) Reset() {
	*x = ServerNotification{}
	mi := &file_mcp_api_v1_unions_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerNotification) ProtoMessage() {}

func (x *ServerNotification) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_api_v1_unions_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerNotification.ProtoReflect.Descriptor instead.
func (*ServerNotification) Descriptor() ([]byte, []int) {
	return file_mcp_api_v1_unions_proto_rawDescGZIP(), []int{3}
}

func (x *ServerNotification) GetMsg() isServerNotification_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *ServerNotification) GetCancelled() *server.CancelledNotification {
	if x != nil {
		if x, ok := x.Msg.(*ServerNotification_Cancelled); ok {
			return x.Cancelled
		}
	}
	return nil
}

func (x *ServerNotification) GetProgress() *server.ProgressNotification {
	if x != nil {
		if x, ok := x.Msg.(*ServerNotification_Progress); ok {
			return x.Progress
		}
	}
	return nil
}

func (x *ServerNotification) GetLoggingMessage() *server.LoggingMessageNotification {
	if x != nil {
		if x, ok := x.Msg.(*ServerNotification_LoggingMessage); ok {
			return x.LoggingMessage
		}
	}
	return nil
}

func (x *ServerNotification) GetPromptListChanged() *server.PromptListChangedNotification {
	if x != nil {
		if x, ok := x.Msg.(*ServerNotification_PromptListChanged); ok {
			return x.PromptListChanged
		}
	}
	return nil
}

func (x *ServerNotification) GetResourceListChanged() *server.ResourceListChangedNotification {
	if x != nil {
		if x, ok := x.Msg.(*ServerNotification_ResourceListChanged); ok {
			return x.ResourceListChanged
		}
	}
	return nil
}

func (x *ServerNotification) GetResourceUpdated() *server.ResourceUpdatedNotification {
	if x != nil {
		if x, ok := x.Msg.(*ServerNotification_ResourceUpdated); ok {
			return x.ResourceUpdated
		}
	}
	return nil
}

func (x *ServerNotification) GetToolListChanged() *server.ToolListChangedNotification {
	if x != nil {
		if x, ok := x.Msg.(*ServerNotification_ToolListChanged); ok {
			return x.ToolListChanged
		}
	}
	return nil
}

type isServerNotification_Msg interface {
	isServerNotification_Msg()
}

type ServerNotification_Cancelled struct {
	// Cancellation notification.
	Cancelled *server.CancelledNotification `protobuf:"bytes,1,opt,name=cancelled,oneof"`
}

type ServerNotification_Progress struct {
	// Progress notification.
	Progress *server.ProgressNotification `protobuf:"bytes,2,opt,name=progress,oneof"`
}

type ServerNotification_LoggingMessage struct {
	// Logging message notification.
	LoggingMessage *server.LoggingMessageNotification `protobuf:"bytes,3,opt,name=logging_message,json=loggingMessage,oneof"`
}

type ServerNotification_PromptListChanged struct {
	// Prompt list changed notification.
	PromptListChanged *server.PromptListChangedNotification `protobuf:"bytes,4,opt,name=prompt_list_changed,json=promptListChanged,oneof"`
}

type ServerNotification_ResourceListChanged struct {
	// Resource list changed notification.
	ResourceListChanged *server.ResourceListChangedNotification `protobuf:"bytes,5,opt,name=resource_list_changed,json=resourceListChanged,oneof"`
}

type ServerNotification_ResourceUpdated struct {
	// Resource updated notification.
	ResourceUpdated *server.ResourceUpdatedNotification `protobuf:"bytes,6,opt,name=resource_updated,json=resourceUpdated,oneof"`
}

type ServerNotification_ToolListChanged struct {
	// Tool list changed notification.
	ToolListChanged *server.ToolListChangedNotification `protobuf:"bytes,7,opt,name=tool_list_changed,json=toolListChanged,oneof"`
}

func (*ServerNotification_Cancelled) isServerNotification_Msg() {}

func (*ServerNotification_Progress) isServerNotification_Msg() {}

func (*ServerNotification_LoggingMessage) isServerNotification_Msg() {}

func (*ServerNotification_PromptListChanged) isServerNotification_Msg() {}

func (*ServerNotification_ResourceListChanged) isServerNotification_Msg() {}

func (*ServerNotification_ResourceUpdated) isServerNotification_Msg() {}

func (*ServerNotification_ToolListChanged) isServerNotification_Msg() {}

// Union of all requests the server may send.
type ServerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Msg:
	//
	//	*ServerRequest_CreateMessage
	//	*ServerRequest_Elicit
	//	*ServerRequest_ListRoots
	//	*ServerRequest_Ping
	Msg           isServerRequest_Msg `protobuf_oneof:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerRequest) Reset() {
	*x = ServerRequest{}
	mi := &file_mcp_api_v1_unions_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerRequest) ProtoMessage() {}

func (x *ServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_api_v1_unions_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerRequest.ProtoReflect.Descriptor instead.
func (*ServerRequest) Descriptor() ([]byte, []int) {
	return file_mcp_api_v1_unions_proto_rawDescGZIP(), []int{4}
}

func (x *ServerRequest) GetMsg() isServerRequest_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *ServerRequest) GetCreateMessage() *server.CreateMessageRequest {
	if x != nil {
		if x, ok := x.Msg.(*ServerRequest_CreateMessage); ok {
			return x.CreateMessage
		}
	}
	return nil
}

func (x *ServerRequest) GetElicit() *server.ElicitRequest {
	if x != nil {
		if x, ok := x.Msg.(*ServerRequest_Elicit); ok {
			return x.Elicit
		}
	}
	return nil
}

func (x *ServerRequest) GetListRoots() *server.ListRootsRequest {
	if x != nil {
		if x, ok := x.Msg.(*ServerRequest_ListRoots); ok {
			return x.ListRoots
		}
	}
	return nil
}

func (x *ServerRequest) GetPing() *server.PingRequest {
	if x != nil {
		if x, ok := x.Msg.(*ServerRequest_Ping); ok {
			return x.Ping
		}
	}
	return nil
}

type isServerRequest_Msg interface {
	isServerRequest_Msg()
}

type ServerRequest_CreateMessage struct {
	// Create a sampling message.
	CreateMessage *server.CreateMessageRequest `protobuf:"bytes,1,opt,name=create_message,json=createMessage,oneof"`
}

type ServerRequest_Elicit struct {
	// Elicit additional information.
	Elicit *server.ElicitRequest `protobuf:"bytes,2,opt,name=elicit,oneof"`
}

type ServerRequest_ListRoots struct {
	// List roots request.
	ListRoots *server.ListRootsRequest `protobuf:"bytes,3,opt,name=list_roots,json=listRoots,oneof"`
}

type ServerRequest_Ping struct {
	// Ping for liveness.
	Ping *server.PingRequest `protobuf:"bytes,4,opt,name=ping,oneof"`
}

func (*ServerRequest_CreateMessage) isServerRequest_Msg() {}

func (*ServerRequest_Elicit) isServerRequest_Msg() {}

func (*ServerRequest_ListRoots) isServerRequest_Msg() {}

func (*ServerRequest_Ping) isServerRequest_Msg() {}

// Union of all response/result types the server may receive.
type ServerResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Msg:
	//
	//	*ServerResult_Empty
	//	*ServerResult_CallTool
	//	*ServerResult_Complete
	//	*ServerResult_GetPrompt
	//	*ServerResult_Initialize
	//	*ServerResult_ListPrompts
	//	*ServerResult_ListResourceTemplates
	//	*ServerResult_ListResources
	//	*ServerResult_ListTools
	//	*ServerResult_ReadResource
	Msg           isServerResult_Msg `protobuf_oneof:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerResult) Reset() {
	*x = ServerResult{}
	mi := &file_mcp_api_v1_unions_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerResult) ProtoMessage() {}

func (x *ServerResult) ProtoReflect() protoreflect.Message {
	mi := &file_mcp_api_v1_unions_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerResult.ProtoReflect.Descriptor instead.
func (*ServerResult) Descriptor() ([]byte, []int) {
	return file_mcp_api_v1_unions_proto_rawDescGZIP(), []int{5}
}

func (x *ServerResult) GetMsg() isServerResult_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *ServerResult) GetEmpty() *server.EmptyResult {
	if x != nil {
		if x, ok := x.Msg.(*ServerResult_Empty); ok {
			return x.Empty
		}
	}
	return nil
}

func (x *ServerResult) GetCallTool() *server.CallToolResult {
	if x != nil {
		if x, ok := x.Msg.(*ServerResult_CallTool); ok {
			return x.CallTool
		}
	}
	return nil
}

func (x *ServerResult) GetComplete() *server.CompleteResult {
	if x != nil {
		if x, ok := x.Msg.(*ServerResult_Complete); ok {
			return x.Complete
		}
	}
	return nil
}

func (x *ServerResult) GetGetPrompt() *server.GetPromptResult {
	if x != nil {
		if x, ok := x.Msg.(*ServerResult_GetPrompt); ok {
			return x.GetPrompt
		}
	}
	return nil
}

func (x *ServerResult) GetInitialize() *server.InitializeResult {
	if x != nil {
		if x, ok := x.Msg.(*ServerResult_Initialize); ok {
			return x.Initialize
		}
	}
	return nil
}

func (x *ServerResult) GetListPrompts() *server.ListPromptsResult {
	if x != nil {
		if x, ok := x.Msg.(*ServerResult_ListPrompts); ok {
			return x.ListPrompts
		}
	}
	return nil
}

func (x *ServerResult) GetListResourceTemplates() *server.ListResourceTemplatesResult {
	if x != nil {
		if x, ok := x.Msg.(*ServerResult_ListResourceTemplates); ok {
			return x.ListResourceTemplates
		}
	}
	return nil
}

func (x *ServerResult) GetListResources() *server.ListResourcesResult {
	if x != nil {
		if x, ok := x.Msg.(*ServerResult_ListResources); ok {
			return x.ListResources
		}
	}
	return nil
}

func (x *ServerResult) GetListTools() *server.ListToolsResult {
	if x != nil {
		if x, ok := x.Msg.(*ServerResult_ListTools); ok {
			return x.ListTools
		}
	}
	return nil
}

func (x *ServerResult) GetReadResource() *server.ReadResourceResult {
	if x != nil {
		if x, ok := x.Msg.(*ServerResult_ReadResource); ok {
			return x.ReadResource
		}
	}
	return nil
}

type isServerResult_Msg interface {
	isServerResult_Msg()
}

type ServerResult_Empty struct {
	// Empty result.
	Empty *server.EmptyResult `protobuf:"bytes,1,opt,name=empty,oneof"`
}

type ServerResult_CallTool struct {
	// Call tool result.
	CallTool *server.CallToolResult `protobuf:"bytes,2,opt,name=call_tool,json=callTool,oneof"`
}

type ServerResult_Complete struct {
	// Complete result (autocomplete).
	Complete *server.CompleteResult `protobuf:"bytes,3,opt,name=complete,oneof"`
}

type ServerResult_GetPrompt struct {
	// Get prompt result.
	GetPrompt *server.GetPromptResult `protobuf:"bytes,4,opt,name=get_prompt,json=getPrompt,oneof"`
}

type ServerResult_Initialize struct {
	// Initialize result.
	Initialize *server.InitializeResult `protobuf:"bytes,5,opt,name=initialize,oneof"`
}

type ServerResult_ListPrompts struct {
	// List prompts result.
	ListPrompts *server.ListPromptsResult `protobuf:"bytes,6,opt,name=list_prompts,json=listPrompts,oneof"`
}

type ServerResult_ListResourceTemplates struct {
	// List resource templates result.
	ListResourceTemplates *server.ListResourceTemplatesResult `protobuf:"bytes,7,opt,name=list_resource_templates,json=listResourceTemplates,oneof"`
}

type ServerResult_ListResources struct {
	// List resources result.
	ListResources *server.ListResourcesResult `protobuf:"bytes,8,opt,name=list_resources,json=listResources,oneof"`
}

type ServerResult_ListTools struct {
	// List tools result.
	ListTools *server.ListToolsResult `protobuf:"bytes,9,opt,name=list_tools,json=listTools,oneof"`
}

type ServerResult_ReadResource struct {
	// Read resource result.
	ReadResource *server.ReadResourceResult `protobuf:"bytes,10,opt,name=read_resource,json=readResource,oneof"`
}

func (*ServerResult_Empty) isServerResult_Msg() {}

func (*ServerResult_CallTool) isServerResult_Msg() {}

func (*ServerResult_Complete) isServerResult_Msg() {}

func (*ServerResult_GetPrompt) isServerResult_Msg() {}

func (*ServerResult_Initialize) isServerResult_Msg() {}

func (*ServerResult_ListPrompts) isServerResult_Msg() {}

func (*ServerResult_ListResourceTemplates) isServerResult_Msg() {}

func (*ServerResult_ListResources) isServerResult_Msg() {}

func (*ServerResult_ListTools) isServerResult_Msg() {}

func (*ServerResult_ReadResource) isServerResult_Msg() {}

var File_mcp_api_v1_unions_proto protoreflect.FileDescriptor

const file_mcp_api_v1_unions_proto_rawDesc = "" +
	"\n" +
	"\x17mcp/api/v1/unions.proto\x12\n" +
	"mcp.api.v1\x1a!mcp/client/v1/notifications.proto\x1a\x1cmcp/client/v1/requests.proto\x1a\x1bmcp/client/v1/results.proto\x1a\x1amcp/server/v1/common.proto\x1a!mcp/server/v1/notifications.proto\x1a\x1cmcp/server/v1/requests.proto\x1a\x1bmcp/server/v1/results.proto\"\xcd\x02\n" +
	"\x12ClientNotification\x12D\n" +
	"\tcancelled\x18\x01 \x01(\v2$.mcp.client.v1.CancelledNotificationH\x00R\tcancelled\x12A\n" +
	"\bprogress\x18\x02 \x01(\v2#.mcp.client.v1.ProgressNotificationH\x00R\bprogress\x12J\n" +
	"\vinitialized\x18\x03 \x01(\v2&.mcp.client.v1.InitializedNotificationH\x00R\vinitialized\x12[\n" +
	"\x12roots_list_changed\x18\x04 \x01(\v2+.mcp.client.v1.RootsListChangedNotificationH\x00R\x10rootsListChangedB\x05\n" +
	"\x03msg\"\x9c\a\n" +
	"\rClientRequest\x12=\n" +
	"\tcall_tool\x18\x01 \x01(\v2\x1e.mcp.client.v1.CallToolRequestH\x00R\bcallTool\x12<\n" +
	"\bcomplete\x18\x02 \x01(\v2\x1e.mcp.client.v1.CompleteRequestH\x00R\bcomplete\x12@\n" +
	"\n" +
	"get_prompt\x18\x03 \x01(\v2\x1f.mcp.client.v1.GetPromptRequestH\x00R\tgetPrompt\x12B\n" +
	"\n" +
	"initialize\x18\x04 \x01(\v2 .mcp.client.v1.InitializeRequestH\x00R\n" +
	"initialize\x12F\n" +
	"\flist_prompts\x18\x05 \x01(\v2!.mcp.client.v1.ListPromptsRequestH\x00R\vlistPrompts\x12e\n" +
	"\x17list_resource_templates\x18\x06 \x01(\v2+.mcp.client.v1.ListResourceTemplatesRequestH\x00R\x15listResourceTemplates\x12L\n" +
	"\x0elist_resources\x18\a \x01(\v2#.mcp.client.v1.ListResourcesRequestH\x00R\rlistResources\x12@\n" +
	"\n" +
	"list_tools\x18\b \x01(\v2\x1f.mcp.client.v1.ListToolsRequestH\x00R\tlistTools\x120\n" +
	"\x04ping\x18\t \x01(\v2\x1a.mcp.client.v1.PingRequestH\x00R\x04ping\x12I\n" +
	"\rread_resource\x18\n" +
	" \x01(\v2\".mcp.client.v1.ReadResourceRequestH\x00R\freadResource\x12=\n" +
	"\tset_level\x18\v \x01(\v2\x1e.mcp.client.v1.SetLevelRequestH\x00R\bsetLevel\x12?\n" +
	"\tsubscribe\x18\f \x01(\v2\x1f.mcp.client.v1.SubscribeRequestH\x00R\tsubscribe\x12E\n" +
	"\vunsubscribe\x18\r \x01(\v2!.mcp.client.v1.UnsubscribeRequestH\x00R\vunsubscribeB\x05\n" +
	"\x03msg\"\x8e\x02\n" +
	"\fClientResult\x122\n" +
	"\x05empty\x18\x01 \x01(\v2\x1a.mcp.client.v1.EmptyResultH\x00R\x05empty\x12K\n" +
	"\x0ecreate_message\x18\x02 \x01(\v2\".mcp.client.v1.CreateMessageResultH\x00R\rcreateMessage\x125\n" +
	"\x06elicit\x18\x03 \x01(\v2\x1b.mcp.client.v1.ElicitResultH\x00R\x06elicit\x12?\n" +
	"\n" +
	"list_roots\x18\x04 \x01(\v2\x1e.mcp.client.v1.ListRootsResultH\x00R\tlistRootsB\x05\n" +
	"\x03msg\"\xf3\x04\n" +
	"\x12ServerNotification\x12D\n" +
	"\tcancelled\x18\x01 \x01(\v2$.mcp.server.v1.CancelledNotificationH\x00R\tcancelled\x12A\n" +
	"\bprogress\x18\x02 \x01(\v2#.mcp.server.v1.ProgressNotificationH\x00R\bprogress\x12T\n" +
	"\x0flogging_message\x18\x03 \x01(\v2).mcp.server.v1.LoggingMessageNotificationH\x00R\x0eloggingMessage\x12^\n" +
	"\x13prompt_list_changed\x18\x04 \x01(\v2,.mcp.server.v1.PromptListChangedNotificationH\x00R\x11promptListChanged\x12d\n" +
	"\x15resource_list_changed\x18\x05 \x01(\v2..mcp.server.v1.ResourceListChangedNotificationH\x00R\x13resourceListChanged\x12W\n" +
	"\x10resource_updated\x18\x06 \x01(\v2*.mcp.server.v1.ResourceUpdatedNotificationH\x00R\x0fresourceUpdated\x12X\n" +
	"\x11tool_list_changed\x18\a \x01(\v2*.mcp.server.v1.ToolListChangedNotificationH\x00R\x0ftoolListChangedB\x05\n" +
	"\x03msg\"\x90\x02\n" +
	"\rServerRequest\x12L\n" +
	"\x0ecreate_message\x18\x01 \x01(\v2#.mcp.server.v1.CreateMessageRequestH\x00R\rcreateMessage\x126\n" +
	"\x06elicit\x18\x02 \x01(\v2\x1c.mcp.server.v1.ElicitRequestH\x00R\x06elicit\x12@\n" +
	"\n" +
	"list_roots\x18\x03 \x01(\v2\x1f.mcp.server.v1.ListRootsRequestH\x00R\tlistRoots\x120\n" +
	"\x04ping\x18\x04 \x01(\v2\x1a.mcp.server.v1.PingRequestH\x00R\x04pingB\x05\n" +
	"\x03msg\"\xcd\x05\n" +
	"\fServerResult\x122\n" +
	"\x05empty\x18\x01 \x01(\v2\x1a.mcp.server.v1.EmptyResultH\x00R\x05empty\x12<\n" +
	"\tcall_tool\x18\x02 \x01(\v2\x1d.mcp.server.v1.CallToolResultH\x00R\bcallTool\x12;\n" +
	"\bcomplete\x18\x03 \x01(\v2\x1d.mcp.server.v1.CompleteResultH\x00R\bcomplete\x12?\n" +
	"\n" +
	"get_prompt\x18\x04 \x01(\v2\x1e.mcp.server.v1.GetPromptResultH\x00R\tgetPrompt\x12A\n" +
	"\n" +
	"initialize\x18\x05 \x01(\v2\x1f.mcp.server.v1.InitializeResultH\x00R\n" +
	"initialize\x12E\n" +
	"\flist_prompts\x18\x06 \x01(\v2 .mcp.server.v1.ListPromptsResultH\x00R\vlistPrompts\x12d\n" +
	"\x17list_resource_templates\x18\a \x01(\v2*.mcp.server.v1.ListResourceTemplatesResultH\x00R\x15listResourceTemplates\x12K\n" +
	"\x0elist_resources\x18\b \x01(\v2\".mcp.server.v1.ListResourcesResultH\x00R\rlistResources\x12?\n" +
	"\n" +
	"list_tools\x18\t \x01(\v2\x1e.mcp.server.v1.ListToolsResultH\x00R\tlistTools\x12H\n" +
	"\rread_resource\x18\n" +
	" \x01(\v2!.mcp.server.v1.ReadResourceResultH\x00R\freadResourceB\x05\n" +
	"\x03msgB}\n" +
	"\x15org.mcp.api.resourcesB\vUnionsProtoH\x01P\x01Z\vpkg/mcp/api\xa2\x02\x03MAX\xaa\x02\n" +
	"Mcp.Api.V1\xca\x02\n" +
	"Mcp\\Api\\V1\xe2\x02\x16Mcp\\Api\\V1\\GPBMetadata\xea\x02\fMcp::Api::V1b\beditionsp\xe8\a"

var (
	file_mcp_api_v1_unions_proto_rawDescOnce sync.Once
	file_mcp_api_v1_unions_proto_rawDescData []byte
)

func file_mcp_api_v1_unions_proto_rawDescGZIP() []byte {
	file_mcp_api_v1_unions_proto_rawDescOnce.Do(func() {
		file_mcp_api_v1_unions_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mcp_api_v1_unions_proto_rawDesc), len(file_mcp_api_v1_unions_proto_rawDesc)))
	})
	return file_mcp_api_v1_unions_proto_rawDescData
}

var file_mcp_api_v1_unions_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_mcp_api_v1_unions_proto_goTypes = []any{
	(*ClientNotification)(nil),                     // 0: mcp.api.v1.ClientNotification
	(*ClientRequest)(nil),                          // 1: mcp.api.v1.ClientRequest
	(*ClientResult)(nil),                           // 2: mcp.api.v1.ClientResult
	(*ServerNotification)(nil),                     // 3: mcp.api.v1.ServerNotification
	(*ServerRequest)(nil),                          // 4: mcp.api.v1.ServerRequest
	(*ServerResult)(nil),                           // 5: mcp.api.v1.ServerResult
	(*client.CancelledNotification)(nil),           // 6: mcp.client.v1.CancelledNotification
	(*client.ProgressNotification)(nil),            // 7: mcp.client.v1.ProgressNotification
	(*client.InitializedNotification)(nil),         // 8: mcp.client.v1.InitializedNotification
	(*client.RootsListChangedNotification)(nil),    // 9: mcp.client.v1.RootsListChangedNotification
	(*client.CallToolRequest)(nil),                 // 10: mcp.client.v1.CallToolRequest
	(*client.CompleteRequest)(nil),                 // 11: mcp.client.v1.CompleteRequest
	(*client.GetPromptRequest)(nil),                // 12: mcp.client.v1.GetPromptRequest
	(*client.InitializeRequest)(nil),               // 13: mcp.client.v1.InitializeRequest
	(*client.ListPromptsRequest)(nil),              // 14: mcp.client.v1.ListPromptsRequest
	(*client.ListResourceTemplatesRequest)(nil),    // 15: mcp.client.v1.ListResourceTemplatesRequest
	(*client.ListResourcesRequest)(nil),            // 16: mcp.client.v1.ListResourcesRequest
	(*client.ListToolsRequest)(nil),                // 17: mcp.client.v1.ListToolsRequest
	(*client.PingRequest)(nil),                     // 18: mcp.client.v1.PingRequest
	(*client.ReadResourceRequest)(nil),             // 19: mcp.client.v1.ReadResourceRequest
	(*client.SetLevelRequest)(nil),                 // 20: mcp.client.v1.SetLevelRequest
	(*client.SubscribeRequest)(nil),                // 21: mcp.client.v1.SubscribeRequest
	(*client.UnsubscribeRequest)(nil),              // 22: mcp.client.v1.UnsubscribeRequest
	(*client.EmptyResult)(nil),                     // 23: mcp.client.v1.EmptyResult
	(*client.CreateMessageResult)(nil),             // 24: mcp.client.v1.CreateMessageResult
	(*client.ElicitResult)(nil),                    // 25: mcp.client.v1.ElicitResult
	(*client.ListRootsResult)(nil),                 // 26: mcp.client.v1.ListRootsResult
	(*server.CancelledNotification)(nil),           // 27: mcp.server.v1.CancelledNotification
	(*server.ProgressNotification)(nil),            // 28: mcp.server.v1.ProgressNotification
	(*server.LoggingMessageNotification)(nil),      // 29: mcp.server.v1.LoggingMessageNotification
	(*server.PromptListChangedNotification)(nil),   // 30: mcp.server.v1.PromptListChangedNotification
	(*server.ResourceListChangedNotification)(nil), // 31: mcp.server.v1.ResourceListChangedNotification
	(*server.ResourceUpdatedNotification)(nil),     // 32: mcp.server.v1.ResourceUpdatedNotification
	(*server.ToolListChangedNotification)(nil),     // 33: mcp.server.v1.ToolListChangedNotification
	(*server.CreateMessageRequest)(nil),            // 34: mcp.server.v1.CreateMessageRequest
	(*server.ElicitRequest)(nil),                   // 35: mcp.server.v1.ElicitRequest
	(*server.ListRootsRequest)(nil),                // 36: mcp.server.v1.ListRootsRequest
	(*server.PingRequest)(nil),                     // 37: mcp.server.v1.PingRequest
	(*server.EmptyResult)(nil),                     // 38: mcp.server.v1.EmptyResult
	(*server.CallToolResult)(nil),                  // 39: mcp.server.v1.CallToolResult
	(*server.CompleteResult)(nil),                  // 40: mcp.server.v1.CompleteResult
	(*server.GetPromptResult)(nil),                 // 41: mcp.server.v1.GetPromptResult
	(*server.InitializeResult)(nil),                // 42: mcp.server.v1.InitializeResult
	(*server.ListPromptsResult)(nil),               // 43: mcp.server.v1.ListPromptsResult
	(*server.ListResourceTemplatesResult)(nil),     // 44: mcp.server.v1.ListResourceTemplatesResult
	(*server.ListResourcesResult)(nil),             // 45: mcp.server.v1.ListResourcesResult
	(*server.ListToolsResult)(nil),                 // 46: mcp.server.v1.ListToolsResult
	(*server.ReadResourceResult)(nil),              // 47: mcp.server.v1.ReadResourceResult
}
var file_mcp_api_v1_unions_proto_depIdxs = []int32{
	6,  // 0: mcp.api.v1.ClientNotification.cancelled:type_name -> mcp.client.v1.CancelledNotification
	7,  // 1: mcp.api.v1.ClientNotification.progress:type_name -> mcp.client.v1.ProgressNotification
	8,  // 2: mcp.api.v1.ClientNotification.initialized:type_name -> mcp.client.v1.InitializedNotification
	9,  // 3: mcp.api.v1.ClientNotification.roots_list_changed:type_name -> mcp.client.v1.RootsListChangedNotification
	10, // 4: mcp.api.v1.ClientRequest.call_tool:type_name -> mcp.client.v1.CallToolRequest
	11, // 5: mcp.api.v1.ClientRequest.complete:type_name -> mcp.client.v1.CompleteRequest
	12, // 6: mcp.api.v1.ClientRequest.get_prompt:type_name -> mcp.client.v1.GetPromptRequest
	13, // 7: mcp.api.v1.ClientRequest.initialize:type_name -> mcp.client.v1.InitializeRequest
	14, // 8: mcp.api.v1.ClientRequest.list_prompts:type_name -> mcp.client.v1.ListPromptsRequest
	15, // 9: mcp.api.v1.ClientRequest.list_resource_templates:type_name -> mcp.client.v1.ListResourceTemplatesRequest
	16, // 10: mcp.api.v1.ClientRequest.list_resources:type_name -> mcp.client.v1.ListResourcesRequest
	17, // 11: mcp.api.v1.ClientRequest.list_tools:type_name -> mcp.client.v1.ListToolsRequest
	18, // 12: mcp.api.v1.ClientRequest.ping:type_name -> mcp.client.v1.PingRequest
	19, // 13: mcp.api.v1.ClientRequest.read_resource:type_name -> mcp.client.v1.ReadResourceRequest
	20, // 14: mcp.api.v1.ClientRequest.set_level:type_name -> mcp.client.v1.SetLevelRequest
	21, // 15: mcp.api.v1.ClientRequest.subscribe:type_name -> mcp.client.v1.SubscribeRequest
	22, // 16: mcp.api.v1.ClientRequest.unsubscribe:type_name -> mcp.client.v1.UnsubscribeRequest
	23, // 17: mcp.api.v1.ClientResult.empty:type_name -> mcp.client.v1.EmptyResult
	24, // 18: mcp.api.v1.ClientResult.create_message:type_name -> mcp.client.v1.CreateMessageResult
	25, // 19: mcp.api.v1.ClientResult.elicit:type_name -> mcp.client.v1.ElicitResult
	26, // 20: mcp.api.v1.ClientResult.list_roots:type_name -> mcp.client.v1.ListRootsResult
	27, // 21: mcp.api.v1.ServerNotification.cancelled:type_name -> mcp.server.v1.CancelledNotification
	28, // 22: mcp.api.v1.ServerNotification.progress:type_name -> mcp.server.v1.ProgressNotification
	29, // 23: mcp.api.v1.ServerNotification.logging_message:type_name -> mcp.server.v1.LoggingMessageNotification
	30, // 24: mcp.api.v1.ServerNotification.prompt_list_changed:type_name -> mcp.server.v1.PromptListChangedNotification
	31, // 25: mcp.api.v1.ServerNotification.resource_list_changed:type_name -> mcp.server.v1.ResourceListChangedNotification
	32, // 26: mcp.api.v1.ServerNotification.resource_updated:type_name -> mcp.server.v1.ResourceUpdatedNotification
	33, // 27: mcp.api.v1.ServerNotification.tool_list_changed:type_name -> mcp.server.v1.ToolListChangedNotification
	34, // 28: mcp.api.v1.ServerRequest.create_message:type_name -> mcp.server.v1.CreateMessageRequest
	35, // 29: mcp.api.v1.ServerRequest.elicit:type_name -> mcp.server.v1.ElicitRequest
	36, // 30: mcp.api.v1.ServerRequest.list_roots:type_name -> mcp.server.v1.ListRootsRequest
	37, // 31: mcp.api.v1.ServerRequest.ping:type_name -> mcp.server.v1.PingRequest
	38, // 32: mcp.api.v1.ServerResult.empty:type_name -> mcp.server.v1.EmptyResult
	39, // 33: mcp.api.v1.ServerResult.call_tool:type_name -> mcp.server.v1.CallToolResult
	40, // 34: mcp.api.v1.ServerResult.complete:type_name -> mcp.server.v1.CompleteResult
	41, // 35: mcp.api.v1.ServerResult.get_prompt:type_name -> mcp.server.v1.GetPromptResult
	42, // 36: mcp.api.v1.ServerResult.initialize:type_name -> mcp.server.v1.InitializeResult
	43, // 37: mcp.api.v1.ServerResult.list_prompts:type_name -> mcp.server.v1.ListPromptsResult
	44, // 38: mcp.api.v1.ServerResult.list_resource_templates:type_name -> mcp.server.v1.ListResourceTemplatesResult
	45, // 39: mcp.api.v1.ServerResult.list_resources:type_name -> mcp.server.v1.ListResourcesResult
	46, // 40: mcp.api.v1.ServerResult.list_tools:type_name -> mcp.server.v1.ListToolsResult
	47, // 41: mcp.api.v1.ServerResult.read_resource:type_name -> mcp.server.v1.ReadResourceResult
	42, // [42:42] is the sub-list for method output_type
	42, // [42:42] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_mcp_api_v1_unions_proto_init() }
func file_mcp_api_v1_unions_proto_init() {
	if File_mcp_api_v1_unions_proto != nil {
		return
	}
	file_mcp_api_v1_unions_proto_msgTypes[0].OneofWrappers = []any{
		(*ClientNotification_Cancelled)(nil),
		(*ClientNotification_Progress)(nil),
		(*ClientNotification_Initialized)(nil),
		(*ClientNotification_RootsListChanged)(nil),
	}
	file_mcp_api_v1_unions_proto_msgTypes[1].OneofWrappers = []any{
		(*ClientRequest_CallTool)(nil),
		(*ClientRequest_Complete)(nil),
		(*ClientRequest_GetPrompt)(nil),
		(*ClientRequest_Initialize)(nil),
		(*ClientRequest_ListPrompts)(nil),
		(*ClientRequest_ListResourceTemplates)(nil),
		(*ClientRequest_ListResources)(nil),
		(*ClientRequest_ListTools)(nil),
		(*ClientRequest_Ping)(nil),
		(*ClientRequest_ReadResource)(nil),
		(*ClientRequest_SetLevel)(nil),
		(*ClientRequest_Subscribe)(nil),
		(*ClientRequest_Unsubscribe)(nil),
	}
	file_mcp_api_v1_unions_proto_msgTypes[2].OneofWrappers = []any{
		(*ClientResult_Empty)(nil),
		(*ClientResult_CreateMessage)(nil),
		(*ClientResult_Elicit)(nil),
		(*ClientResult_ListRoots)(nil),
	}
	file_mcp_api_v1_unions_proto_msgTypes[3].OneofWrappers = []any{
		(*ServerNotification_Cancelled)(nil),
		(*ServerNotification_Progress)(nil),
		(*ServerNotification_LoggingMessage)(nil),
		(*ServerNotification_PromptListChanged)(nil),
		(*ServerNotification_ResourceListChanged)(nil),
		(*ServerNotification_ResourceUpdated)(nil),
		(*ServerNotification_ToolListChanged)(nil),
	}
	file_mcp_api_v1_unions_proto_msgTypes[4].OneofWrappers = []any{
		(*ServerRequest_CreateMessage)(nil),
		(*ServerRequest_Elicit)(nil),
		(*ServerRequest_ListRoots)(nil),
		(*ServerRequest_Ping)(nil),
	}
	file_mcp_api_v1_unions_proto_msgTypes[5].OneofWrappers = []any{
		(*ServerResult_Empty)(nil),
		(*ServerResult_CallTool)(nil),
		(*ServerResult_Complete)(nil),
		(*ServerResult_GetPrompt)(nil),
		(*ServerResult_Initialize)(nil),
		(*ServerResult_ListPrompts)(nil),
		(*ServerResult_ListResourceTemplates)(nil),
		(*ServerResult_ListResources)(nil),
		(*ServerResult_ListTools)(nil),
		(*ServerResult_ReadResource)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mcp_api_v1_unions_proto_rawDesc), len(file_mcp_api_v1_unions_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mcp_api_v1_unions_proto_goTypes,
		DependencyIndexes: file_mcp_api_v1_unions_proto_depIdxs,
		MessageInfos:      file_mcp_api_v1_unions_proto_msgTypes,
	}.Build()
	File_mcp_api_v1_unions_proto = out.File
	file_mcp_api_v1_unions_proto_goTypes = nil
	file_mcp_api_v1_unions_proto_depIdxs = nil
}
